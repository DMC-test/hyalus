Search.setIndex({"docnames": ["_hyalus/hyalus", "_hyalus/hyalus.assertions", "_hyalus/hyalus.assertions.apply", "_hyalus/hyalus.assertions.compare", "_hyalus/hyalus.config", "_hyalus/hyalus.config.common", "_hyalus/hyalus.config.linter", "_hyalus/hyalus.config.loader", "_hyalus/hyalus.config.steps", "_hyalus/hyalus.config.steps.base", "_hyalus/hyalus.config.steps.cloud", "_hyalus/hyalus.config.steps.run", "_hyalus/hyalus.config.steps.verify", "_hyalus/hyalus.config.tags", "_hyalus/hyalus.config.tags.base", "_hyalus/hyalus.parse", "_hyalus/hyalus.parse.base", "_hyalus/hyalus.parse.csv", "_hyalus/hyalus.parse.gtf", "_hyalus/hyalus.parse.tsv", "_hyalus/hyalus.parse.vcf", "_hyalus/hyalus.run", "_hyalus/hyalus.utils", "_hyalus/hyalus.utils.file_utils", "_hyalus/hyalus.utils.json_utils", "_hyalus/hyalus.utils.logging_utils", "_hyalus/modules", "_tests/modules", "_tests/tests", "_tests/tests.assertions", "_tests/tests.assertions.test_apply", "_tests/tests.assertions.test_compare", "_tests/tests.config", "_tests/tests.config.steps", "_tests/tests.config.steps.test_base", "_tests/tests.config.steps.test_run", "_tests/tests.config.tags", "_tests/tests.parse", "_tests/tests.parse.test_base", "_tests/tests.parse.test_csv", "_tests/tests.parse.test_gtf", "_tests/tests.parse.test_tsv", "_tests/tests.parse.test_vcf", "_tests/tests.testing_utils", "_tests/tests.utils", "_tests/tests.utils.test_file_utils", "_tests/tests.utils.test_json_utils", "_tests/tests.utils.test_logging_utils", "index", "readme", "releases"], "filenames": ["_hyalus/hyalus.rst", "_hyalus/hyalus.assertions.rst", "_hyalus/hyalus.assertions.apply.rst", "_hyalus/hyalus.assertions.compare.rst", "_hyalus/hyalus.config.rst", "_hyalus/hyalus.config.common.rst", "_hyalus/hyalus.config.linter.rst", "_hyalus/hyalus.config.loader.rst", "_hyalus/hyalus.config.steps.rst", "_hyalus/hyalus.config.steps.base.rst", "_hyalus/hyalus.config.steps.cloud.rst", "_hyalus/hyalus.config.steps.run.rst", "_hyalus/hyalus.config.steps.verify.rst", "_hyalus/hyalus.config.tags.rst", "_hyalus/hyalus.config.tags.base.rst", "_hyalus/hyalus.parse.rst", "_hyalus/hyalus.parse.base.rst", "_hyalus/hyalus.parse.csv.rst", "_hyalus/hyalus.parse.gtf.rst", "_hyalus/hyalus.parse.tsv.rst", "_hyalus/hyalus.parse.vcf.rst", "_hyalus/hyalus.run.rst", "_hyalus/hyalus.utils.rst", "_hyalus/hyalus.utils.file_utils.rst", "_hyalus/hyalus.utils.json_utils.rst", "_hyalus/hyalus.utils.logging_utils.rst", "_hyalus/modules.rst", "_tests/modules.rst", "_tests/tests.rst", "_tests/tests.assertions.rst", "_tests/tests.assertions.test_apply.rst", "_tests/tests.assertions.test_compare.rst", "_tests/tests.config.rst", "_tests/tests.config.steps.rst", "_tests/tests.config.steps.test_base.rst", "_tests/tests.config.steps.test_run.rst", "_tests/tests.config.tags.rst", "_tests/tests.parse.rst", "_tests/tests.parse.test_base.rst", "_tests/tests.parse.test_csv.rst", "_tests/tests.parse.test_gtf.rst", "_tests/tests.parse.test_tsv.rst", "_tests/tests.parse.test_vcf.rst", "_tests/tests.testing_utils.rst", "_tests/tests.utils.rst", "_tests/tests.utils.test_file_utils.rst", "_tests/tests.utils.test_json_utils.rst", "_tests/tests.utils.test_logging_utils.rst", "index.rst", "readme.rst", "releases.rst"], "titles": ["hyalus package", "hyalus.assertions package", "hyalus.assertions.apply module", "hyalus.assertions.compare module", "hyalus.config package", "hyalus.config.common module", "hyalus.config.linter module", "hyalus.config.loader module", "hyalus.config.steps package", "hyalus.config.steps.base module", "hyalus.config.steps.cloud module", "hyalus.config.steps.run module", "hyalus.config.steps.verify module", "hyalus.config.tags package", "hyalus.config.tags.base module", "hyalus.parse package", "hyalus.parse.base module", "hyalus.parse.csv module", "hyalus.parse.gtf module", "hyalus.parse.tsv module", "hyalus.parse.vcf module", "hyalus.run package", "hyalus.utils package", "hyalus.utils.file_utils module", "hyalus.utils.json_utils module", "hyalus.utils.logging_utils module", "hyalus", "tests", "tests package", "tests.assertions package", "tests.assertions.test_apply module", "tests.assertions.test_compare module", "tests.config package", "tests.config.steps package", "tests.config.steps.test_base module", "tests.config.steps.test_run module", "tests.config.tags package", "tests.parse package", "tests.parse.test_base module", "tests.parse.test_csv module", "tests.parse.test_gtf module", "tests.parse.test_tsv module", "tests.parse.test_vcf module", "tests.testing_utils module", "tests.utils package", "tests.utils.test_file_utils module", "tests.utils.test_json_utils module", "tests.utils.test_logging_utils module", "README", "README", "Releases"], "terms": {"assert": [0, 6, 7, 26, 27, 28, 38, 39, 41, 45, 46, 47, 48], "submodul": [0, 26, 27, 32, 48], "appli": [0, 1, 30, 43], "modul": [0, 1, 4, 8, 13, 15, 22, 27, 28, 29, 32, 33, 37, 44, 48], "compar": [0, 1, 2, 31], "config": [0, 26, 27, 28, 48], "step": [0, 4, 28, 32], "tag": [0, 4, 28, 32], "common": [0, 4], "linter": [0, 4, 43], "loader": [0, 4], "pars": [0, 5, 6, 26, 27, 28, 48], "base": [0, 2, 4, 5, 6, 7, 8, 11, 13, 15, 17, 19, 23, 25, 30, 34, 35, 38, 39, 41, 45, 46, 47], "csv": [0, 15, 39], "gtf": [0, 15], "tsv": [0, 15, 41], "vcf": [0, 15], "run": [0, 4, 6, 7, 8, 9, 25, 26, 34, 35, 43, 47, 48], "util": [0, 5, 26, 27, 28, 43, 48], "file_util": [0, 22, 45], "json_util": [0, 22], "logging_util": [0, 22, 47], "expect": [1, 3, 6, 38], "observ": [1, 3], "logic": [1, 9, 14, 16], "applic": 2, "function": [2, 3, 7, 11, 30, 31, 35, 38, 43, 45, 46, 47, 49], "given": [2, 6, 7, 11, 16, 17, 19, 23, 24, 30, 43, 46], "valu": [2, 3, 5, 6, 9, 16, 17, 19, 24, 38, 46], "class": [2, 5, 6, 7, 9, 11, 14, 16, 17, 19, 25, 30, 34, 35, 38, 39, 41, 43, 45, 46, 47], "constraintappli": [2, 30], "func": [2, 11], "arg": [2, 5, 9, 11, 30, 35], "kwarg": [2, 11, 16, 17, 19, 35, 38], "object": [2, 6, 7, 9, 14, 24, 25, 30, 34, 35, 38, 39, 41, 45, 46, 47], "constraint": 2, "retriev": [2, 24], "result": [2, 5, 9, 12, 16, 17, 19, 23, 30, 31, 38, 45], "necessari": 2, "ctor": [2, 6, 7, 11, 16, 17, 19, 25], "paramet": [2, 6, 7, 9, 11, 16, 17, 19, 23, 24, 25, 34, 43], "callabl": [2, 11, 43], "bool": [2, 3, 6, 16, 17, 19, 24, 25], "The": [2, 6, 7, 9, 11, 16, 23, 24, 25, 34, 43], "ani": [2, 9, 11, 16, 17, 19, 34, 43], "argument": [2, 11, 16, 17, 19, 25, 30, 35, 43], "suppli": 2, "order": 2, "keyword": [2, 11, 16, 17, 19, 30, 35], "return": [2, 3, 6, 7, 9, 11, 16, 17, 19, 23, 24, 25, 34, 35, 43, 46], "self": [2, 43], "process_arg": [2, 30], "perform": [2, 6], "search": 2, "process": [2, 5, 7, 9, 11, 34, 46], "oper": [2, 3, 31], "input": [2, 38, 46], "posit": [2, 11, 30, 35], "store": [2, 16, 17, 19], "handl": [2, 23, 30, 35], "type": [2, 3, 6, 9, 11, 24, 25, 43], "none": [2, 5, 9, 11, 24, 25, 30, 34, 35], "each": [2, 9, 47], "process_kwarg": [2, 30], "kwarg_kei": 2, "kwarg_valu": 2, "hashabl": 2, "kei": [2, 3, 16, 17, 19, 24, 30, 38, 46], "properti": [2, 9, 11, 16, 17, 19, 34, 47], "processed_arg": 2, "list": [2, 9, 11, 24, 34, 46], "give": [2, 30, 38, 45, 46], "prior": [2, 7, 9], "taken": 2, "care": 2, "processed_kwarg": 2, "dict": [2, 6, 9, 16, 24], "us": [3, 5, 7, 11, 16, 17, 19, 23, 25, 34, 43, 48], "context": 3, "an": [3, 5, 7, 11, 24, 25, 38, 46], "thi": [3, 7, 9, 11, 16, 34, 43], "intention": 3, "redefin": 3, "mani": 3, "defin": [3, 16, 17, 19, 43], "builtin": [3, 11, 31], "eas": 3, "explicitli": 3, "note": [3, 7], "support": [3, 35], "softwar": [3, 49], "contain": [3, 46], "b": [3, 35], "alia": [3, 6, 9], "eq": 3, "ge": 3, "gt": 3, "in_": [3, 31], "outcom": 3, "test": [3, 48, 49], "is_": 3, "is_not": 3, "items_contain": [3, 31], "item": [3, 30], "keys_contain": [3, 31], "le": 3, "lt": 3, "ne": 3, "values_contain": [3, 31], "cloud": [4, 8], "verifi": [4, 8], "configur": [5, 7, 25], "lint": [5, 6, 7], "etc": 5, "configstatu": 5, "enum": 5, "enumer": 5, "could_not_be_load": 5, "could": [5, 23], "load": [5, 6, 7, 9, 11, 35], "doubl": 5, "check": [5, 35], "import": [5, 7, 11], "syntax": 5, "invalid_field": 5, "had": 5, "field": [5, 6, 9], "did": [5, 23], "pass": [5, 9, 11, 16, 34, 35, 38], "qualiti": 5, "missing_field": 5, "have": [5, 6, 30, 34, 43], "all": [5, 6, 30, 43], "requir": [5, 11], "not_found": 5, "found": [5, 23, 24, 45], "other_failur": 5, "wa": [5, 24], "invalid": 5, "some": 5, "other": [5, 24], "reason": 5, "pylint_failur": 5, "fail": [5, 35], "pylint": [5, 6, 43], "see": 5, "config_pylint_output": 5, "txt": 5, "failur": 5, "valid": [5, 7, 38], "except": [5, 11, 23], "error": [5, 6, 35], "parent": [5, 11], "both": [5, 35], "messag": [5, 25, 47], "log": [5, 9, 25, 47], "well": 5, "halt": 5, "do": 5, "invalidhyalusconfig": 5, "additional_info": 5, "To": 5, "rais": [5, 11, 23, 24, 45, 46], "when": [5, 35, 38, 45, 46, 47], "file": [5, 6, 7, 9, 11, 16, 17, 18, 19, 20, 23, 25, 34, 35, 38, 45], "cannot": [5, 7, 38, 45], "doe": [5, 7, 46], "i": [5, 7, 11, 23, 24, 25, 35, 38, 39, 41, 43, 45, 46, 47], "otherwis": [5, 25], "user": [6, 7], "gener": [6, 7, 11], "configattr": 6, "name": [6, 9, 16, 17, 19, 43], "descript": 6, "tupl": [6, 9, 24], "creat": [6, 7, 9, 11, 24, 25, 43], "new": [6, 9], "instanc": [6, 9], "_asdict": [6, 9], "which": [6, 9, 25], "map": [6, 9], "_field_default": [6, 9], "_field": [6, 9], "classmethod": [6, 9], "_make": [6, 9], "iter": [6, 9], "make": [6, 9, 30, 35, 48], "from": [6, 7, 9, 10, 11, 34, 45, 46, 47], "sequenc": [6, 9], "_replac": [6, 9], "kwd": [6, 9], "replac": [6, 9], "specifi": [6, 9, 24, 25], "number": [6, 9], "1": [6, 9, 23, 45, 48], "0": [6, 9, 35, 48], "2": [6, 25], "configlint": 6, "run_pylint": 6, "true": [6, 16, 17, 19, 30, 31, 46, 47], "relev": [6, 34, 43], "str": [6, 7, 9, 11, 16, 17, 19, 23, 24, 25, 34], "path": [6, 7, 9, 11, 16, 17, 19, 23, 25, 30, 34, 45, 46], "default": [6, 9, 11, 16, 17, 19, 24, 25, 34], "flag": [6, 16, 17, 19, 25], "warn": 6, "_field_check": 6, "exist": [6, 46], "_type_check": 6, "correct": 6, "work": [6, 11], "under": 6, "assumpt": 6, "respons": 7, "configload": 7, "config_path": 7, "kick": 7, "off": [7, 38], "_load_modul": 7, "sy": 7, "statement": 7, "instanti": [7, 16, 38], "stepbas": [9, 11, 34], "abc": [9, 16], "_load": [9, 11, 34], "step_numb": 9, "run_dir": [9, 34, 35], "conveni": 9, "method": [9, 11, 16, 17, 19, 30, 34, 43], "runner": 9, "info": [9, 25, 47], "need": [9, 11, 30, 34], "results_dir": 9, "directori": [9, 16, 17, 19], "tmp_dir": 9, "temp": 9, "run_log": 9, "step_log": 9, "specif": [9, 39, 41], "_post_process": [9, 11, 34], "workflow_output": 9, "post": 9, "": [9, 11, 34], "workflow": [9, 11, 34], "captur": [9, 11, 35], "option": [9, 11, 25, 34], "stepoutput": [9, 11, 34], "output": [9, 11, 12, 16, 34], "caller": 9, "_pre_process": [9, 11], "pre": [9, 11, 34], "_run_workflow": [9, 11, 34], "abstract": [9, 16], "pre_process_output": [9, 11, 34], "extens": [9, 11, 34], "ar": [9, 11, 30, 31, 34, 35, 38, 39, 41, 47], "final": 9, "start": 9, "finish": 9, "success": [9, 35], "relat": [10, 11, 12, 23, 24, 25], "push": 10, "pull": 10, "data": [10, 16], "somewher": 10, "arbitrari": 11, "piec": 11, "code": [11, 35], "via": 11, "cli": 11, "call": [11, 25, 38, 47], "dill": 11, "being": [11, 23, 35], "save": 11, "disk": 11, "pickl": [11, 35], "onli": [11, 23, 25, 35, 47], "refer": 11, "themselv": 11, "howev": 11, "still": 11, "meet": 11, "librari": 11, "unlik": 11, "allow": [11, 25, 43], "python": 11, "environ": 11, "runfunctionstep": [11, 35], "must": 11, "within": [11, 24], "execut": 11, "set": [11, 24, 25, 34, 35, 39, 41, 46], "up": [11, 35], "bin": 11, "funcstep": 11, "py": 11, "script": [11, 35], "accordingli": [11, 25], "make_script": 11, "string": [11, 25], "format": [11, 16, 25, 35, 47], "subprocessstep": [11, 35], "cmd": 11, "shell": 11, "command": [11, 35], "subprocess": 11, "verif": [12, 49], "tagbas": 14, "dataframepars": [16, 17, 19, 38, 39, 41], "file_path": [16, 17, 19], "use_glob": [16, 17, 19], "fals": [16, 17, 19, 24, 25, 30, 31, 35, 47], "cach": [16, 17, 19, 38], "resultspars": [16, 38], "datafram": [16, 17, 19, 38], "parser": [16, 17, 18, 19, 20], "should": [16, 17, 19, 25, 31, 35], "includ": [16, 17, 19], "wildcard": [16, 17, 19, 23, 38, 45], "If": [16, 17, 19, 23, 24, 25], "treat": [16, 17, 19], "boolean": [16, 17, 19, 24, 25], "whether": [16, 17, 19, 24], "memori": [16, 17, 19], "_pars": [16, 17, 19], "panda": [16, 17, 19], "pd": [16, 38], "read_csv": [16, 38], "delimit": [16, 17, 19, 39, 41], "keyvaluepars": [16, 17, 19, 38, 39, 41], "convert": 16, "pair": [16, 38], "dictionari": [16, 38], "privat": 16, "structur": [16, 24], "workabl": 16, "csvdataframepars": [17, 39], "csvkeyvaluepars": [17, 39], "comma": 17, "tsvdataframepars": [19, 41], "t": [19, 30, 43, 46], "tsvkeyvaluepars": [19, 41], "tab": [19, 39, 41], "invalidwildcard": [23, 45], "repres": [23, 24], "find": 23, "singl": 23, "glob_fil": [23, 45], "glob": [23, 38, 45], "multipl": [23, 45], "json": [24, 46], "jsonobject": 24, "possibl": 24, "jsonvalu": 24, "int": 24, "float": 24, "arrai": [24, 46], "json_append": [24, 46], "obj": [24, 46], "path_list": [24, 46], "indic": 24, "append": [24, 46], "locat": 24, "updat": [24, 46], "correspond": 24, "uniontyp": 24, "keyerror": [24, 46], "indexerror": [24, 46], "index": [24, 46], "valueerror": [24, 46], "lead": 24, "someth": [24, 46], "than": [24, 47], "json_get": [24, 46], "inspect": 24, "json_set": [24, 46], "create_kei": [24, 46], "alreadi": 24, "present": 24, "empti": [24, 46], "hyalusfilehandl": 25, "log_fil": 25, "filehandl": 25, "custom": 25, "hyaluslogformatt": [25, 47], "handler": [25, 47], "formatt": 25, "take": [25, 30], "pathnam": 25, "attribut": [25, 34], "module_path": 25, "initi": [25, 50], "either": 25, "describ": 25, "abov": 25, "special": 25, "date": 25, "datefmt": 25, "omit": 25, "you": [25, 43], "get": [25, 46], "iso8601": 25, "like": 25, "rfc": 25, "3339": 25, "style": [25, 43], "want": 25, "one": 25, "templat": 25, "your": [25, 43], "chang": [25, 48], "version": 25, "3": 25, "ad": [25, 47], "hyalusstreamhandl": 25, "stream": 25, "streamhandl": 25, "textio": 25, "io": 25, "write": 25, "configure_log": [25, 47], "log_stdout": [25, 47], "debug": [25, 47], "onc": [25, 47], "per": 25, "interpret": [25, 47], "session": [25, 47], "Will": 25, "short": 25, "circuit": 25, "stdout": [25, 35, 47], "level": [25, 46], "packag": [26, 27, 48], "subpackag": [26, 27, 48], "testing_util": [27, 28, 48], "test_appli": [28, 29], "test_compar": [28, 29], "test_bas": [28, 32, 33, 37], "test_csv": [28, 37], "test_gtf": [28, 37], "test_tsv": [28, 37], "test_vcf": [28, 37], "test_file_util": [28, 44], "test_json_util": [28, 44], "test_logging_util": [28, 44], "unit": [30, 31, 34, 35, 38, 39, 41, 43, 45, 46, 47], "hyalu": [30, 31, 34, 35, 38, 39, 41, 43, 45, 46, 47, 48], "testconstraintappli": 30, "static": [30, 34, 35, 38, 39, 41, 45, 46, 47], "test_apply_mixed_1": 30, "test_apply_mixed_2": 30, "test_apply_three_args_1": 30, "three": 30, "test_apply_three_args_2": 30, "test_apply_three_kwargs_1": 30, "test_apply_three_kwargs_2": 30, "test_apply_two_args_1": 30, "two": 30, "test_apply_two_args_2": 30, "test_apply_two_kwargs_1": 30, "test_apply_two_kwargs_2": 30, "test_process_args_mix": 30, "sure": [30, 35], "mix": 30, "case": [30, 31, 45], "simpl": [30, 31], "resolv": 30, "properli": [30, 35, 38], "test_process_args_resolv": 30, "test_process_args_simpl": 30, "don": 30, "test_process_kwargs_mix": 30, "test_process_kwargs_resolv": 30, "test_process_kwargs_simpl": 30, "valuegett": 30, "dummi": 30, "ge_kwarg": 30, "arg1": 30, "arg2": 30, "arg3": 30, "ge_mix": 30, "ge_multi": 30, "left": 31, "out": [31, 35, 39, 41], "scope": [31, 39, 41], "fixture_example_dict": 31, "fixture_example_list": 31, "test_in_fals": 31, "example_list": 31, "where": [31, 45], "test_in_tru": 31, "test_items_contain_fals": 31, "example_dict": 31, "test_items_contain_tru": 31, "test_keys_contain_fals": 31, "test_keys_contain_tru": 31, "test_values_contain_fals": 31, "test_values_contain_tru": 31, "test_run": [32, 33], "mystep": 34, "For": [34, 35, 43], "teststepbas": 34, "test_load": [34, 35], "ensur": 34, "after": [34, 35], "been": 34, "testrunfunctionstep": 35, "test_make_script_both_argu": 35, "test_make_script_keyword_argu": 35, "test_make_script_positional_argu": 35, "test_run_fail": 35, "stderr": 35, "non": 35, "zero": 35, "test_run_pass": 35, "successfulli": 35, "test_run_recurs": 35, "recurs": 35, "also": 35, "testsubprocessstep": 35, "func_to_run": 35, "c": 35, "d": 35, "recurse_flip_flop": 35, "testdataframepars": 38, "test_abc_honor": 38, "test_pars": 38, "test_parse_kwarg": 38, "testkeyvaluepars": 38, "testresultspars": 38, "test_parse_cache_off": 38, "turn": 38, "test_parse_cache_on": 38, "test_use_glob_tru": 38, "integr": 38, "testcsvdataframepars": 39, "test_delimit": [39, 41], "testcsvkeyvaluepars": 39, "testtsvdataframepars": 41, "testtsvkeyvaluepars": 41, "applydecor": 43, "decor": 43, "exampl": [43, 48], "staticmethod": 43, "myclass": 43, "pytest": 43, "fixtur": 43, "my_fixtur": 43, "def": 43, "fixture_my_fixtur": 43, "method_1": 43, "method_2": 43, "roughli": 43, "equival": 43, "manual": 43, "add": 43, "probabl": 43, "complain": 43, "e0211": 43, "e0213": 43, "runtim": 43, "won": 43, "issu": [43, 48], "fixture_run_dir": 43, "tmp_path": [43, 47], "wrap": 43, "subdirectori": 43, "testglobfil": 45, "test_glob_file_multiple_found": 45, "test_glob_file_not_found": 45, "test_glob_file_pass": 45, "testjsonappend": 46, "test_json_append_1": 46, "test_arrai": 46, "outer": 46, "test_json_append_2": 46, "inner": 46, "test_json_append_invalid_index": 46, "doesn": 46, "test_json_append_invalid_kei": 46, "test_json_append_not_arrai": 46, "try": 46, "testjsonget": 46, "test_json_get_array_1": 46, "most": 46, "test_json_get_array_2": 46, "test_json_get_array_empty_array_fail": 46, "test_json_get_array_empty_array_pass": 46, "test_json_get_array_empty_path_list": 46, "itself": 46, "test_json_get_array_invalid_index": 46, "test_json_get_object_1": 46, "test_object": 46, "test_json_get_object_2": 46, "test_json_get_object_empty_object_fail": 46, "test_json_get_object_empty_object_pass": 46, "test_json_get_object_empty_path_list": 46, "test_json_get_object_invalid_kei": 46, "testjsonset": 46, "test_json_set_array_1": 46, "test_json_set_array_2": 46, "middl": 46, "test_json_set_array_3": 46, "test_json_set_array_empty_path_list": 46, "attempt": 46, "test_json_set_array_invalid_index": 46, "test_json_set_object_1": 46, "test_json_set_object_2": 46, "test_json_set_object_create_key_tru": 46, "test_json_set_object_empty_path_list": 46, "test_json_set_object_invalid_kei": 46, "fixture_test_arrai": 46, "fixture_test_object": 46, "testconfigurelog": 47, "separ": 47, "function_nam": 47, "make_cmd": 47, "tmp_log": 47, "module_nam": 47, "test_double_cal": 47, "more": 47, "addit": 47, "test_stdout_false_debug_fals": 47, "written": 47, "noth": 47, "test_stdout_false_debug_tru": 47, "test_stdout_true_debug_fals": 47, "test_stdout_true_debug_tru": 47, "testhyaluslogformatt": 47, "test_format": 47, "hyalus_log_record": 47, "proper": 47, "fixture_hyalus_log_record": 47, "fixture_tmp_log": 47, "instal": 48, "report": 48, "intern": 49, "tool": 49, "genapsysinc": 49, "todo": 49, "github": 50, "bare": 50, "minimum": 50, "repo": 50, "setup": 50}, "objects": {"": [[0, 0, 0, "-", "hyalus"], [28, 0, 0, "-", "tests"]], "hyalus": [[1, 0, 0, "-", "assertions"], [4, 0, 0, "-", "config"], [15, 0, 0, "-", "parse"], [21, 0, 0, "-", "run"], [22, 0, 0, "-", "utils"]], "hyalus.assertions": [[2, 0, 0, "-", "apply"], [3, 0, 0, "-", "compare"]], "hyalus.assertions.apply": [[2, 1, 1, "", "ConstraintApplier"]], "hyalus.assertions.apply.ConstraintApplier": [[2, 2, 1, "", "apply"], [2, 2, 1, "", "process_arg"], [2, 2, 1, "", "process_args"], [2, 2, 1, "", "process_kwarg"], [2, 2, 1, "", "process_kwargs"], [2, 3, 1, "", "processed_args"], [2, 3, 1, "", "processed_kwargs"], [2, 3, 1, "", "result"]], "hyalus.assertions.compare": [[3, 4, 1, "", "contains"], [3, 4, 1, "", "eq"], [3, 4, 1, "", "ge"], [3, 4, 1, "", "gt"], [3, 4, 1, "", "in_"], [3, 4, 1, "", "is_"], [3, 4, 1, "", "is_not"], [3, 4, 1, "", "items_contain"], [3, 4, 1, "", "keys_contain"], [3, 4, 1, "", "le"], [3, 4, 1, "", "lt"], [3, 4, 1, "", "ne"], [3, 4, 1, "", "values_contain"]], "hyalus.config": [[5, 0, 0, "-", "common"], [6, 0, 0, "-", "linter"], [7, 0, 0, "-", "loader"], [8, 0, 0, "-", "steps"], [13, 0, 0, "-", "tags"]], "hyalus.config.common": [[5, 1, 1, "", "ConfigStatus"], [5, 6, 1, "", "Error"], [5, 6, 1, "", "Failure"], [5, 6, 1, "", "InvalidHyalusConfig"]], "hyalus.config.common.ConfigStatus": [[5, 5, 1, "", "COULD_NOT_BE_LOADED"], [5, 5, 1, "", "INVALID_FIELDS"], [5, 5, 1, "", "MISSING_FIELDS"], [5, 5, 1, "", "NOT_FOUND"], [5, 5, 1, "", "OTHER_FAILURE"], [5, 5, 1, "", "PYLINT_FAILURE"], [5, 5, 1, "", "VALID"]], "hyalus.config.linter": [[6, 1, 1, "", "ConfigAttr"], [6, 1, 1, "", "ConfigLinter"]], "hyalus.config.linter.ConfigAttr": [[6, 2, 1, "", "_asdict"], [6, 5, 1, "", "_field_defaults"], [6, 5, 1, "", "_fields"], [6, 2, 1, "", "_make"], [6, 2, 1, "", "_replace"], [6, 5, 1, "", "description"], [6, 5, 1, "", "name"], [6, 5, 1, "", "type"]], "hyalus.config.linter.ConfigLinter": [[6, 2, 1, "", "_field_check"], [6, 2, 1, "", "_type_check"], [6, 2, 1, "", "lint"]], "hyalus.config.loader": [[7, 1, 1, "", "ConfigLoader"]], "hyalus.config.loader.ConfigLoader": [[7, 2, 1, "", "_load_module"], [7, 2, 1, "", "run"]], "hyalus.config.steps": [[9, 0, 0, "-", "base"], [10, 0, 0, "-", "cloud"], [11, 0, 0, "-", "run"], [12, 0, 0, "-", "verify"]], "hyalus.config.steps.base": [[9, 1, 1, "", "StepBase"], [9, 1, 1, "", "StepOutput"]], "hyalus.config.steps.base.StepBase": [[9, 2, 1, "", "_load"], [9, 2, 1, "", "_post_process"], [9, 2, 1, "", "_pre_process"], [9, 2, 1, "", "_run_workflow"], [9, 3, 1, "", "needs"], [9, 2, 1, "", "run"]], "hyalus.config.steps.base.StepOutput": [[9, 2, 1, "", "_asdict"], [9, 5, 1, "", "_field_defaults"], [9, 5, 1, "", "_fields"], [9, 2, 1, "", "_make"], [9, 2, 1, "", "_replace"], [9, 5, 1, "", "output"], [9, 5, 1, "", "success"]], "hyalus.config.steps.run": [[11, 1, 1, "", "RunFunctionStep"], [11, 1, 1, "", "SubprocessStep"]], "hyalus.config.steps.run.RunFunctionStep": [[11, 2, 1, "", "_load"], [11, 2, 1, "", "_pre_process"], [11, 2, 1, "", "_run_workflow"], [11, 2, 1, "", "make_script"], [11, 3, 1, "", "needs"]], "hyalus.config.steps.run.SubprocessStep": [[11, 2, 1, "", "_run_workflow"], [11, 3, 1, "", "needs"]], "hyalus.config.tags": [[14, 0, 0, "-", "base"]], "hyalus.config.tags.base": [[14, 1, 1, "", "TagBase"]], "hyalus.parse": [[16, 0, 0, "-", "base"], [17, 0, 0, "-", "csv"], [18, 0, 0, "-", "gtf"], [19, 0, 0, "-", "tsv"], [20, 0, 0, "-", "vcf"]], "hyalus.parse.base": [[16, 1, 1, "", "DataFrameParser"], [16, 1, 1, "", "KeyValueParser"], [16, 1, 1, "", "ResultsParser"]], "hyalus.parse.base.DataFrameParser": [[16, 2, 1, "", "_parse"], [16, 3, 1, "", "delimiter"]], "hyalus.parse.base.KeyValueParser": [[16, 2, 1, "", "_parse"], [16, 3, 1, "", "delimiter"]], "hyalus.parse.base.ResultsParser": [[16, 2, 1, "", "_parse"], [16, 2, 1, "", "parse"]], "hyalus.parse.csv": [[17, 1, 1, "", "CSVDataFrameParser"], [17, 1, 1, "", "CSVKeyValueParser"]], "hyalus.parse.csv.CSVDataFrameParser": [[17, 3, 1, "", "delimiter"]], "hyalus.parse.csv.CSVKeyValueParser": [[17, 3, 1, "", "delimiter"]], "hyalus.parse.tsv": [[19, 1, 1, "", "TSVDataFrameParser"], [19, 1, 1, "", "TSVKeyValueParser"]], "hyalus.parse.tsv.TSVDataFrameParser": [[19, 3, 1, "", "delimiter"]], "hyalus.parse.tsv.TSVKeyValueParser": [[19, 3, 1, "", "delimiter"]], "hyalus.utils": [[23, 0, 0, "-", "file_utils"], [24, 0, 0, "-", "json_utils"], [25, 0, 0, "-", "logging_utils"]], "hyalus.utils.file_utils": [[23, 6, 1, "", "InvalidWildcard"], [23, 4, 1, "", "glob_file"]], "hyalus.utils.json_utils": [[24, 7, 1, "", "JSONObject"], [24, 7, 1, "", "JSONValue"], [24, 4, 1, "", "json_append"], [24, 4, 1, "", "json_get"], [24, 4, 1, "", "json_set"]], "hyalus.utils.logging_utils": [[25, 1, 1, "", "HyalusFileHandler"], [25, 1, 1, "", "HyalusLogFormatter"], [25, 1, 1, "", "HyalusStreamHandler"], [25, 4, 1, "", "configure_logging"]], "tests": [[29, 0, 0, "-", "assertions"], [32, 0, 0, "-", "config"], [37, 0, 0, "-", "parse"], [43, 0, 0, "-", "testing_utils"], [44, 0, 0, "-", "utils"]], "tests.assertions": [[30, 0, 0, "-", "test_apply"], [31, 0, 0, "-", "test_compare"]], "tests.assertions.test_apply": [[30, 1, 1, "", "TestConstraintApplier"], [30, 1, 1, "", "ValueGetter"], [30, 4, 1, "", "ge_kwargs"], [30, 4, 1, "", "ge_mixed"], [30, 4, 1, "", "ge_multi"]], "tests.assertions.test_apply.TestConstraintApplier": [[30, 2, 1, "", "test_apply_mixed_1"], [30, 2, 1, "", "test_apply_mixed_2"], [30, 2, 1, "", "test_apply_three_args_1"], [30, 2, 1, "", "test_apply_three_args_2"], [30, 2, 1, "", "test_apply_three_kwargs_1"], [30, 2, 1, "", "test_apply_three_kwargs_2"], [30, 2, 1, "", "test_apply_two_args_1"], [30, 2, 1, "", "test_apply_two_args_2"], [30, 2, 1, "", "test_apply_two_kwargs_1"], [30, 2, 1, "", "test_apply_two_kwargs_2"], [30, 2, 1, "", "test_process_args_mixed"], [30, 2, 1, "", "test_process_args_resolve"], [30, 2, 1, "", "test_process_args_simple"], [30, 2, 1, "", "test_process_kwargs_mixed"], [30, 2, 1, "", "test_process_kwargs_resolve"], [30, 2, 1, "", "test_process_kwargs_simple"]], "tests.assertions.test_apply.ValueGetter": [[30, 2, 1, "", "resolve"]], "tests.assertions.test_compare": [[31, 4, 1, "", "fixture_example_dict"], [31, 4, 1, "", "fixture_example_list"], [31, 4, 1, "", "test_in_false"], [31, 4, 1, "", "test_in_true"], [31, 4, 1, "", "test_items_contain_false"], [31, 4, 1, "", "test_items_contain_true"], [31, 4, 1, "", "test_keys_contain_false"], [31, 4, 1, "", "test_keys_contain_true"], [31, 4, 1, "", "test_values_contain_false"], [31, 4, 1, "", "test_values_contain_true"]], "tests.config": [[33, 0, 0, "-", "steps"], [36, 0, 0, "-", "tags"]], "tests.config.steps": [[34, 0, 0, "-", "test_base"], [35, 0, 0, "-", "test_run"]], "tests.config.steps.test_base": [[34, 1, 1, "", "MyStep"], [34, 1, 1, "", "TestStepBase"]], "tests.config.steps.test_base.MyStep": [[34, 2, 1, "", "_run_workflow"], [34, 3, 1, "", "needs"]], "tests.config.steps.test_base.TestStepBase": [[34, 2, 1, "", "test_load"]], "tests.config.steps.test_run": [[35, 1, 1, "", "TestRunFunctionStep"], [35, 1, 1, "", "TestSubprocessStep"], [35, 4, 1, "", "func_to_run"]], "tests.config.steps.test_run.TestRunFunctionStep": [[35, 2, 1, "", "test_load"], [35, 2, 1, "", "test_make_script_both_arguments"], [35, 2, 1, "", "test_make_script_keyword_arguments"], [35, 2, 1, "", "test_make_script_positional_arguments"], [35, 2, 1, "", "test_run_fail"], [35, 2, 1, "", "test_run_pass"], [35, 2, 1, "", "test_run_recursion"]], "tests.config.steps.test_run.TestSubprocessStep": [[35, 2, 1, "", "test_run_fail"], [35, 2, 1, "", "test_run_pass"]], "tests.parse": [[38, 0, 0, "-", "test_base"], [39, 0, 0, "-", "test_csv"], [40, 0, 0, "-", "test_gtf"], [41, 0, 0, "-", "test_tsv"], [42, 0, 0, "-", "test_vcf"]], "tests.parse.test_base": [[38, 1, 1, "", "TestDataFrameParser"], [38, 1, 1, "", "TestKeyValueParser"], [38, 1, 1, "", "TestResultsParser"]], "tests.parse.test_base.TestDataFrameParser": [[38, 2, 1, "", "test_abc_honored"], [38, 2, 1, "", "test_parse"], [38, 2, 1, "", "test_parse_kwargs"]], "tests.parse.test_base.TestKeyValueParser": [[38, 2, 1, "", "test_abc_honored"], [38, 2, 1, "", "test_parse"]], "tests.parse.test_base.TestResultsParser": [[38, 2, 1, "", "test_abc_honored"], [38, 2, 1, "", "test_parse_cache_off"], [38, 2, 1, "", "test_parse_cache_on"], [38, 2, 1, "", "test_use_glob_true"]], "tests.parse.test_csv": [[39, 1, 1, "", "TestCSVDataFrameParser"], [39, 1, 1, "", "TestCSVKeyValueParser"]], "tests.parse.test_csv.TestCSVDataFrameParser": [[39, 2, 1, "", "test_delimiter"]], "tests.parse.test_csv.TestCSVKeyValueParser": [[39, 2, 1, "", "test_delimiter"]], "tests.parse.test_tsv": [[41, 1, 1, "", "TestTSVDataFrameParser"], [41, 1, 1, "", "TestTSVKeyValueParser"]], "tests.parse.test_tsv.TestTSVDataFrameParser": [[41, 2, 1, "", "test_delimiter"]], "tests.parse.test_tsv.TestTSVKeyValueParser": [[41, 2, 1, "", "test_delimiter"]], "tests.testing_utils": [[43, 4, 1, "", "applydecorator"], [43, 4, 1, "", "fixture_run_dir"]], "tests.utils": [[45, 0, 0, "-", "test_file_utils"], [46, 0, 0, "-", "test_json_utils"], [47, 0, 0, "-", "test_logging_utils"]], "tests.utils.test_file_utils": [[45, 1, 1, "", "TestGlobFile"]], "tests.utils.test_file_utils.TestGlobFile": [[45, 2, 1, "", "test_glob_file_multiple_found"], [45, 2, 1, "", "test_glob_file_not_found"], [45, 2, 1, "", "test_glob_file_pass"]], "tests.utils.test_json_utils": [[46, 1, 1, "", "TestJsonAppend"], [46, 1, 1, "", "TestJsonGet"], [46, 1, 1, "", "TestJsonSet"], [46, 4, 1, "", "fixture_test_array"], [46, 4, 1, "", "fixture_test_object"]], "tests.utils.test_json_utils.TestJsonAppend": [[46, 2, 1, "", "test_json_append_1"], [46, 2, 1, "", "test_json_append_2"], [46, 2, 1, "", "test_json_append_invalid_index"], [46, 2, 1, "", "test_json_append_invalid_key"], [46, 2, 1, "", "test_json_append_not_array"]], "tests.utils.test_json_utils.TestJsonGet": [[46, 2, 1, "", "test_json_get_array_1"], [46, 2, 1, "", "test_json_get_array_2"], [46, 2, 1, "", "test_json_get_array_empty_array_fail"], [46, 2, 1, "", "test_json_get_array_empty_array_pass"], [46, 2, 1, "", "test_json_get_array_empty_path_list"], [46, 2, 1, "", "test_json_get_array_invalid_index"], [46, 2, 1, "", "test_json_get_object_1"], [46, 2, 1, "", "test_json_get_object_2"], [46, 2, 1, "", "test_json_get_object_empty_object_fail"], [46, 2, 1, "", "test_json_get_object_empty_object_pass"], [46, 2, 1, "", "test_json_get_object_empty_path_list"], [46, 2, 1, "", "test_json_get_object_invalid_key"]], "tests.utils.test_json_utils.TestJsonSet": [[46, 2, 1, "", "test_json_set_array_1"], [46, 2, 1, "", "test_json_set_array_2"], [46, 2, 1, "", "test_json_set_array_3"], [46, 2, 1, "", "test_json_set_array_empty_path_list"], [46, 2, 1, "", "test_json_set_array_invalid_index"], [46, 2, 1, "", "test_json_set_object_1"], [46, 2, 1, "", "test_json_set_object_2"], [46, 2, 1, "", "test_json_set_object_create_key_true"], [46, 2, 1, "", "test_json_set_object_empty_path_list"], [46, 2, 1, "", "test_json_set_object_invalid_key"]], "tests.utils.test_logging_utils": [[47, 1, 1, "", "TestConfigureLogging"], [47, 1, 1, "", "TestHyalusLogFormatter"], [47, 4, 1, "", "fixture_hyalus_log_record"], [47, 4, 1, "", "fixture_tmp_log"]], "tests.utils.test_logging_utils.TestConfigureLogging": [[47, 3, 1, "", "function_name"], [47, 2, 1, "", "make_cmd"], [47, 3, 1, "", "module_name"], [47, 2, 1, "", "test_double_call"], [47, 2, 1, "", "test_stdout_false_debug_false"], [47, 2, 1, "", "test_stdout_false_debug_true"], [47, 2, 1, "", "test_stdout_true_debug_false"], [47, 2, 1, "", "test_stdout_true_debug_true"]], "tests.utils.test_logging_utils.TestHyalusLogFormatter": [[47, 2, 1, "", "test_format"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"hyalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49], "packag": [0, 1, 4, 8, 13, 15, 21, 22, 28, 29, 32, 33, 36, 37, 44], "subpackag": [0, 4, 28, 32], "assert": [1, 2, 3, 29, 30, 31], "submodul": [1, 4, 8, 13, 15, 22, 28, 29, 33, 37, 44], "appli": 2, "modul": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 23, 24, 25, 30, 31, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47], "compar": 3, "config": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34, 35, 36], "common": 5, "linter": 6, "loader": 7, "step": [8, 9, 10, 11, 12, 33, 34, 35], "base": [9, 14, 16], "cloud": 10, "run": [11, 21], "verifi": 12, "tag": [13, 14, 36], "pars": [15, 16, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42], "csv": 17, "gtf": 18, "tsv": 19, "vcf": 20, "util": [22, 23, 24, 25, 44, 45, 46, 47], "file_util": 23, "json_util": 24, "logging_util": 25, "test": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "test_appli": 30, "test_compar": 31, "test_bas": [34, 38], "test_run": 35, "test_csv": 39, "test_gtf": 40, "test_tsv": 41, "test_vcf": 42, "testing_util": 43, "test_file_util": 45, "test_json_util": 46, "test_logging_util": 47, "readm": [48, 49], "api": 48, "doc": 48, "releas": [48, 50], "instal": 49, "make": 49, "chang": 49, "report": 49, "issu": 49, "exampl": 49, "us": 49, "0": 50, "1": 50}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})