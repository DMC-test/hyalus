Search.setIndex({"docnames": ["_src/hyalus/hyalus", "_src/hyalus/hyalus.assertions", "_src/hyalus/hyalus.assertions.apply", "_src/hyalus/hyalus.assertions.compare", "_src/hyalus/hyalus.config", "_src/hyalus/hyalus.config.common", "_src/hyalus/hyalus.config.loader", "_src/hyalus/hyalus.config.steps", "_src/hyalus/hyalus.config.steps.base", "_src/hyalus/hyalus.config.steps.cloud", "_src/hyalus/hyalus.config.steps.run", "_src/hyalus/hyalus.config.steps.verify", "_src/hyalus/hyalus.config.tags", "_src/hyalus/hyalus.config.tags.base", "_src/hyalus/hyalus.config.tags.runtime", "_src/hyalus/hyalus.parse", "_src/hyalus/hyalus.parse.base", "_src/hyalus/hyalus.parse.csv", "_src/hyalus/hyalus.parse.factory", "_src/hyalus/hyalus.parse.gtf", "_src/hyalus/hyalus.parse.json", "_src/hyalus/hyalus.parse.tsv", "_src/hyalus/hyalus.parse.vcf", "_src/hyalus/hyalus.run", "_src/hyalus/hyalus.run.common", "_src/hyalus/hyalus.run.python", "_src/hyalus/hyalus.run.runsuite", "_src/hyalus/hyalus.run.runtest", "_src/hyalus/hyalus.utils", "_src/hyalus/hyalus.utils.file_utils", "_src/hyalus/hyalus.utils.json_utils", "_src/hyalus/hyalus.utils.logging_utils", "_src/hyalus/hyalus.utils.pandas_utils", "_src/hyalus/hyalus.utils.typing_utils", "_src/hyalus/modules", "_tests/modules", "_tests/tests", "_tests/tests.assertions", "_tests/tests.assertions.test_apply", "_tests/tests.assertions.test_compare", "_tests/tests.config", "_tests/tests.config.data", "_tests/tests.config.data.invalid_syntax", "_tests/tests.config.data.invalid_types", "_tests/tests.config.data.missing_fields", "_tests/tests.config.data.missing_tags", "_tests/tests.config.data.pass", "_tests/tests.config.steps", "_tests/tests.config.steps.test_base", "_tests/tests.config.steps.test_run", "_tests/tests.config.steps.test_verify", "_tests/tests.config.test_loader", "_tests/tests.parse", "_tests/tests.parse.test_base", "_tests/tests.parse.test_csv", "_tests/tests.parse.test_factory", "_tests/tests.parse.test_gtf", "_tests/tests.parse.test_json", "_tests/tests.parse.test_tsv", "_tests/tests.parse.test_vcf", "_tests/tests.run", "_tests/tests.run.test_common", "_tests/tests.run.test_dir_1", "_tests/tests.run.test_dir_1.runtest_1", "_tests/tests.run.test_dir_1.runtest_1.config", "_tests/tests.run.test_dir_1.runtest_2", "_tests/tests.run.test_dir_1.runtest_2.config", "_tests/tests.run.test_dir_2", "_tests/tests.run.test_dir_2.runtest_2", "_tests/tests.run.test_dir_2.runtest_2.config", "_tests/tests.run.test_dir_2.runtest_3", "_tests/tests.run.test_dir_2.runtest_3.config", "_tests/tests.run.test_dir_2.runtest_4", "_tests/tests.run.test_dir_2.runtest_4.config", "_tests/tests.run.test_python", "_tests/tests.run.test_runtest", "_tests/tests.utils", "_tests/tests.utils.test_file_utils", "_tests/tests.utils.test_json_utils", "_tests/tests.utils.test_logging_utils", "index", "readme", "releases"], "filenames": ["_src/hyalus/hyalus.rst", "_src/hyalus/hyalus.assertions.rst", "_src/hyalus/hyalus.assertions.apply.rst", "_src/hyalus/hyalus.assertions.compare.rst", "_src/hyalus/hyalus.config.rst", "_src/hyalus/hyalus.config.common.rst", "_src/hyalus/hyalus.config.loader.rst", "_src/hyalus/hyalus.config.steps.rst", "_src/hyalus/hyalus.config.steps.base.rst", "_src/hyalus/hyalus.config.steps.cloud.rst", "_src/hyalus/hyalus.config.steps.run.rst", "_src/hyalus/hyalus.config.steps.verify.rst", "_src/hyalus/hyalus.config.tags.rst", "_src/hyalus/hyalus.config.tags.base.rst", "_src/hyalus/hyalus.config.tags.runtime.rst", "_src/hyalus/hyalus.parse.rst", "_src/hyalus/hyalus.parse.base.rst", "_src/hyalus/hyalus.parse.csv.rst", "_src/hyalus/hyalus.parse.factory.rst", "_src/hyalus/hyalus.parse.gtf.rst", "_src/hyalus/hyalus.parse.json.rst", "_src/hyalus/hyalus.parse.tsv.rst", "_src/hyalus/hyalus.parse.vcf.rst", "_src/hyalus/hyalus.run.rst", "_src/hyalus/hyalus.run.common.rst", "_src/hyalus/hyalus.run.python.rst", "_src/hyalus/hyalus.run.runsuite.rst", "_src/hyalus/hyalus.run.runtest.rst", "_src/hyalus/hyalus.utils.rst", "_src/hyalus/hyalus.utils.file_utils.rst", "_src/hyalus/hyalus.utils.json_utils.rst", "_src/hyalus/hyalus.utils.logging_utils.rst", "_src/hyalus/hyalus.utils.pandas_utils.rst", "_src/hyalus/hyalus.utils.typing_utils.rst", "_src/hyalus/modules.rst", "_tests/modules.rst", "_tests/tests.rst", "_tests/tests.assertions.rst", "_tests/tests.assertions.test_apply.rst", "_tests/tests.assertions.test_compare.rst", "_tests/tests.config.rst", "_tests/tests.config.data.rst", "_tests/tests.config.data.invalid_syntax.rst", "_tests/tests.config.data.invalid_types.rst", "_tests/tests.config.data.missing_fields.rst", "_tests/tests.config.data.missing_tags.rst", "_tests/tests.config.data.pass.rst", "_tests/tests.config.steps.rst", "_tests/tests.config.steps.test_base.rst", "_tests/tests.config.steps.test_run.rst", "_tests/tests.config.steps.test_verify.rst", "_tests/tests.config.test_loader.rst", "_tests/tests.parse.rst", "_tests/tests.parse.test_base.rst", "_tests/tests.parse.test_csv.rst", "_tests/tests.parse.test_factory.rst", "_tests/tests.parse.test_gtf.rst", "_tests/tests.parse.test_json.rst", "_tests/tests.parse.test_tsv.rst", "_tests/tests.parse.test_vcf.rst", "_tests/tests.run.rst", "_tests/tests.run.test_common.rst", "_tests/tests.run.test_dir_1.rst", "_tests/tests.run.test_dir_1.runtest_1.rst", "_tests/tests.run.test_dir_1.runtest_1.config.rst", "_tests/tests.run.test_dir_1.runtest_2.rst", "_tests/tests.run.test_dir_1.runtest_2.config.rst", "_tests/tests.run.test_dir_2.rst", "_tests/tests.run.test_dir_2.runtest_2.rst", "_tests/tests.run.test_dir_2.runtest_2.config.rst", "_tests/tests.run.test_dir_2.runtest_3.rst", "_tests/tests.run.test_dir_2.runtest_3.config.rst", "_tests/tests.run.test_dir_2.runtest_4.rst", "_tests/tests.run.test_dir_2.runtest_4.config.rst", "_tests/tests.run.test_python.rst", "_tests/tests.run.test_runtest.rst", "_tests/tests.utils.rst", "_tests/tests.utils.test_file_utils.rst", "_tests/tests.utils.test_json_utils.rst", "_tests/tests.utils.test_logging_utils.rst", "index.rst", "readme.rst", "releases.rst"], "titles": ["hyalus package", "hyalus.assertions package", "hyalus.assertions.apply module", "hyalus.assertions.compare module", "hyalus.config package", "hyalus.config.common module", "hyalus.config.loader module", "hyalus.config.steps package", "hyalus.config.steps.base module", "hyalus.config.steps.cloud module", "hyalus.config.steps.run module", "hyalus.config.steps.verify module", "hyalus.config.tags package", "hyalus.config.tags.base module", "hyalus.config.tags.runtime module", "hyalus.parse package", "hyalus.parse.base module", "hyalus.parse.csv module", "hyalus.parse.factory module", "hyalus.parse.gtf module", "hyalus.parse.json module", "hyalus.parse.tsv module", "hyalus.parse.vcf module", "hyalus.run package", "hyalus.run.common module", "hyalus.run.python module", "hyalus.run.runsuite module", "hyalus.run.runtest module", "hyalus.utils package", "hyalus.utils.file_utils module", "hyalus.utils.json_utils module", "hyalus.utils.logging_utils module", "hyalus.utils.pandas_utils module", "hyalus.utils.typing_utils module", "hyalus", "tests", "tests package", "tests.assertions package", "tests.assertions.test_apply module", "tests.assertions.test_compare module", "tests.config package", "tests.config.data namespace", "tests.config.data.invalid_syntax module", "tests.config.data.invalid_types module", "tests.config.data.missing_fields module", "tests.config.data.missing_tags module", "tests.config.data.pass module", "tests.config.steps package", "tests.config.steps.test_base module", "tests.config.steps.test_run module", "tests.config.steps.test_verify module", "tests.config.test_loader module", "tests.parse package", "tests.parse.test_base module", "tests.parse.test_csv module", "tests.parse.test_factory module", "tests.parse.test_gtf module", "tests.parse.test_json module", "tests.parse.test_tsv module", "tests.parse.test_vcf module", "tests.run package", "tests.run.test_common module", "tests.run.test_dir_1 package", "tests.run.test_dir_1.runtest_1 package", "tests.run.test_dir_1.runtest_1.config module", "tests.run.test_dir_1.runtest_2 package", "tests.run.test_dir_1.runtest_2.config module", "tests.run.test_dir_2 package", "tests.run.test_dir_2.runtest_2 package", "tests.run.test_dir_2.runtest_2.config module", "tests.run.test_dir_2.runtest_3 package", "tests.run.test_dir_2.runtest_3.config module", "tests.run.test_dir_2.runtest_4 package", "tests.run.test_dir_2.runtest_4.config module", "tests.run.test_python module", "tests.run.test_runtest module", "tests.utils package", "tests.utils.test_file_utils module", "tests.utils.test_json_utils module", "tests.utils.test_logging_utils module", "README", "README", "Releases"], "terms": {"test": [0, 3, 8, 13, 14, 24, 25, 27, 80, 81], "har": 0, "util": [0, 5, 34, 35, 36, 55, 61, 80], "sequenc": [0, 6, 8], "health": 0, "softwar": [0, 81], "assert": [0, 6, 11, 25, 34, 35, 36, 53, 54, 55, 57, 58, 64, 66, 71, 73, 74, 77, 78, 79, 80], "submodul": [0, 34, 35, 36, 62, 67], "appli": [0, 1, 25, 32, 38], "modul": [0, 1, 4, 7, 12, 15, 23, 28, 36, 37, 40, 41, 47, 52, 60, 62, 63, 65, 67, 68, 70, 72, 76], "compar": [0, 1, 2, 11, 39], "config": [0, 27, 34, 35, 36, 62, 63, 65, 67, 68, 70, 72, 80], "step": [0, 4, 25, 27, 36, 40, 74, 75], "tag": [0, 4, 6, 45, 51], "common": [0, 4, 23, 61], "loader": [0, 4, 51], "pars": [0, 5, 27, 34, 35, 36, 51, 80], "base": [0, 2, 4, 5, 6, 7, 10, 11, 12, 14, 15, 17, 18, 20, 21, 27, 29, 31, 38, 45, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 73, 74, 75, 77, 78, 79], "csv": [0, 15, 18, 54, 55], "factori": [0, 15, 55], "gtf": [0, 15, 18, 55], "json": [0, 15, 18, 30, 50, 55, 57, 78], "tsv": [0, 15, 18, 50, 53, 55, 58], "vcf": [0, 15, 18, 55], "run": [0, 4, 6, 7, 8, 11, 14, 31, 34, 35, 36, 48, 49, 79, 80], "python": [0, 10, 23, 51, 74], "runsuit": [0, 23], "runtest": [0, 23, 75], "file_util": [0, 28, 77], "json_util": [0, 28], "logging_util": [0, 28, 79], "pandas_util": [0, 28], "typing_util": [0, 28], "expect": [1, 3, 6, 13, 14, 25, 53, 55, 74, 75, 79], "observ": [1, 3], "logic": [1, 8, 16], "applic": [2, 18], "function": [2, 3, 6, 10, 11, 13, 18, 24, 25, 38, 39, 49, 50, 53, 55, 61, 64, 66, 69, 71, 73, 74, 77, 78, 79, 81], "given": [2, 3, 6, 8, 10, 11, 16, 17, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 38, 39, 53, 61, 69, 74, 75, 78, 79], "valu": [2, 3, 5, 6, 8, 10, 11, 13, 16, 17, 20, 21, 30, 32, 33, 38, 39, 43, 44, 45, 46, 53, 74, 78], "class": [2, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 25, 27, 31, 38, 45, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 73, 74, 75, 77, 78, 79], "constraintappli": [2, 38], "func": [2, 10], "arg": [2, 3, 5, 8, 10, 11, 38, 49, 73], "kwarg": [2, 10, 16, 17, 20, 21, 49, 53], "object": [2, 6, 8, 27, 30, 31, 32, 38, 49, 50, 51, 53, 54, 55, 57, 58, 61, 74, 75, 77, 78, 79], "constraint": [2, 32, 53], "retriev": [2, 16, 20, 30], "result": [2, 5, 8, 10, 11, 16, 17, 20, 21, 27, 29, 38, 39, 53, 74, 75, 77], "necessari": 2, "ctor": [2, 6, 10, 11, 13, 14, 16, 17, 20, 21, 27, 31, 45, 73, 74], "paramet": [2, 3, 6, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 45, 48, 73, 74], "callabl": [2, 10, 11, 24, 25], "bool": [2, 3, 8, 11, 16, 17, 20, 21, 25, 27, 30, 31, 33], "The": [2, 3, 6, 8, 10, 11, 13, 14, 16, 18, 20, 24, 25, 27, 29, 30, 31, 32, 33, 45, 48, 74], "ani": [2, 3, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 25, 31, 32, 39, 45, 48, 73, 74, 75], "argument": [2, 10, 11, 16, 17, 20, 21, 25, 31, 38, 49, 50, 73], "suppli": 2, "order": [2, 3, 38], "keyword": [2, 10, 16, 17, 20, 21, 38, 49], "return": [2, 3, 6, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 45, 48, 49, 50, 53, 55, 57, 73, 74, 78, 79], "self": [2, 25, 38], "process_arg": [2, 38], "perform": [2, 55], "search": [2, 6, 16, 20, 27, 53, 75], "process": [2, 5, 6, 8, 10, 11, 48, 74, 78], "oper": [2, 11, 39], "input": [2, 24, 27, 53, 69, 78, 79], "posit": [2, 10, 38, 49], "store": [2, 13, 14, 16, 17, 20, 21, 45], "handl": [2, 25, 29, 32, 38, 49, 50, 51, 61, 74, 75], "type": [2, 3, 6, 8, 10, 13, 14, 18, 25, 30, 31, 33, 45, 51], "none": [2, 3, 5, 6, 8, 10, 11, 18, 20, 25, 27, 30, 31, 38, 48, 49, 55, 61, 74, 79], "each": [2, 3, 8, 11, 79], "process_kwarg": [2, 38], "kwarg_kei": 2, "kwarg_valu": 2, "str": [2, 6, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 45, 48, 74], "kei": [2, 3, 11, 16, 17, 20, 21, 30, 38, 39, 53, 78], "properti": [2, 8, 10, 11, 13, 14, 16, 17, 21, 45, 48, 73, 74], "processed_arg": 2, "list": [2, 8, 10, 11, 16, 20, 27, 30, 32, 39, 48, 74, 78], "give": [2, 38, 53, 75, 77, 78], "prior": [2, 6, 8, 25], "taken": 2, "care": 2, "processed_kwarg": 2, "dict": [2, 6, 8, 16, 18, 20, 30, 39], "us": [3, 5, 6, 11, 16, 17, 18, 20, 21, 25, 27, 29, 31, 38, 48, 50, 74, 79, 80], "context": [3, 25, 74], "an": [3, 6, 10, 16, 18, 25, 30, 31, 50, 53, 61, 75, 78], "contain": [3, 8, 11, 27, 39, 78], "b": [3, 25], "outcom": 3, "dataframe_contain": [3, 11, 39], "true": [3, 8, 16, 17, 20, 21, 25, 27, 38, 39, 75, 78, 79], "least": [3, 11], "one": [3, 11, 27, 31, 39, 53, 75], "record": [3, 11, 16, 32, 39, 79], "datafram": [3, 11, 16, 17, 21, 32, 39, 53], "match": [3, 8, 11, 16, 32, 39, 79], "all": [3, 5, 6, 25, 27, 32, 38, 51, 61, 74], "pair": [3, 16, 32, 53], "column": [3, 16, 32], "els": [3, 8, 31], "fals": [3, 11, 16, 17, 20, 21, 25, 27, 30, 31, 38, 39, 49, 73, 79], "does_not_contain": [3, 11, 39], "eq": [3, 11, 39], "boolean": [3, 8, 16, 17, 20, 21, 30, 31], "check": [3, 5, 38, 39, 49, 50], "whether": [3, 16, 17, 20, 21, 25, 27, 30], "ar": [3, 6, 8, 10, 11, 38, 39, 48, 49, 50, 51, 53, 54, 57, 58, 61, 74, 79], "equal": [3, 11, 38, 53, 57], "other": [3, 5, 8, 10, 25, 30], "first": [3, 11, 31], "comparison": [3, 11, 73], "second": [3, 11], "addit": [3, 25, 79], "otherwis": [3, 5, 31], "ge": [3, 11, 39], "greater": [3, 11, 38], "than": [3, 11, 14, 27, 30, 38, 39, 79], "next": [3, 11], "gt": [3, 11, 39], "in_": [3, 11, 39], "is_": [3, 39], "ident": 3, "via": [3, 10, 25, 27], "is_not": [3, 39], "items_contain": [3, 11, 39], "item": [3, 11, 38, 39], "keys_contain": [3, 11, 39], "le": [3, 11, 39], "less": [3, 11], "lt": [3, 11, 39], "ne": [3, 11, 39], "unequ": [3, 53, 57], "2": [3, 6, 25, 31], "mai": [3, 25], "not_in": [3, 11, 39], "values_contain": [3, 11, 39], "cloud": [4, 7], "verifi": [4, 7, 50, 74], "runtim": [4, 12, 13, 25, 45], "configur": [5, 6, 27, 31, 55], "lint": [5, 6], "etc": [5, 13, 14, 16, 45], "configstatu": 5, "enum": [5, 13], "differ": [5, 8, 53, 57], "status": [5, 8], "file": [5, 6, 8, 10, 11, 16, 17, 18, 19, 20, 21, 22, 27, 29, 31, 43, 44, 45, 46, 48, 49, 50, 53, 55, 57, 74, 77, 79], "load": [5, 6, 8, 10, 49], "could_not_be_load": 5, "could": [5, 18, 27, 29], "doubl": 5, "import": [5, 6, 10], "syntax": 5, "invalid_field": 5, "had": 5, "field": [5, 6, 8, 44, 51], "did": [5, 29], "pass": [5, 8, 10, 11, 16, 27, 40, 41, 48, 49, 50, 53, 64, 73, 74, 75], "qualiti": 5, "missing_field": [5, 40, 41], "have": [5, 6, 25, 38, 48, 51, 75], "requir": [5, 6, 45, 51], "not_found": 5, "found": [5, 8, 16, 18, 27, 29, 30, 31, 55, 75, 77, 79], "other_failur": 5, "wa": [5, 8, 27, 30], "invalid": 5, "some": [5, 51, 61], "reason": 5, "pylint_failur": 5, "fail": [5, 8, 10, 27, 49, 50, 66, 75], "pylint": [5, 25], "see": 5, "config_pylint_output": 5, "txt": [5, 79], "failur": 5, "valid": [5, 6, 43, 46, 51, 53, 55], "except": [5, 8, 10, 27, 29, 61], "error": [5, 8, 10, 49, 69, 71, 73, 75], "parent": [5, 10], "both": [5, 49], "messag": [5, 31, 79], "log": [5, 31, 79], "well": 5, "halt": [5, 8], "do": [5, 24, 39], "invalidhyalusconfig": 5, "additional_info": 5, "To": [5, 27], "rais": [5, 8, 10, 27, 29, 30, 61, 75, 77, 78], "when": [5, 8, 25, 27, 49, 53, 55, 61, 74, 75, 77, 78, 79], "cannot": [5, 6, 27, 31, 53, 77, 79], "doe": [5, 6, 11, 25, 51, 61, 74, 75, 78, 79], "i": [5, 6, 10, 11, 18, 25, 27, 29, 30, 31, 44, 45, 49, 50, 51, 53, 54, 55, 58, 61, 74, 75, 77, 78, 79], "respons": [6, 11], "user": 6, "gener": [6, 10, 18, 55], "configattr": 6, "name": [6, 8, 16, 17, 18, 20, 21, 25, 27, 31, 55, 79], "descript": 6, "tupl": [6, 8, 14, 16, 32], "creat": [6, 8, 10, 18, 24, 25, 27, 30, 31, 61, 74, 79], "new": [6, 8], "instanc": [6, 8, 18, 25, 31], "_asdict": [6, 8], "which": [6, 8, 18, 31, 69, 75], "map": [6, 8, 18, 55], "_field_default": [6, 8], "_field": [6, 8], "classmethod": [6, 8, 25, 74], "_make": [6, 8], "iter": [6, 8], "make": [6, 8, 38, 45, 49, 74, 80], "from": [6, 8, 9, 10, 16, 18, 27, 48, 74, 75, 77, 78, 79], "_replac": [6, 8], "kwd": [6, 8], "replac": [6, 8], "specifi": [6, 8, 25, 27, 30, 31], "alia": [6, 8], "number": [6, 8, 27], "1": [6, 8, 14, 25, 29, 77, 80], "0": [6, 8, 14, 49, 80], "configload": [6, 51], "config_path": 6, "kick": 6, "off": [6, 53], "path": [6, 8, 10, 11, 16, 17, 18, 20, 21, 24, 25, 27, 29, 31, 38, 48, 50, 51, 53, 57, 74, 75, 77, 78, 79], "_field_check": 6, "exist": [6, 24, 31, 51, 61, 75, 78], "_lint": 6, "_load_modul": 6, "note": [6, 25], "thi": [6, 8, 10, 11, 13, 14, 16, 25, 45, 48, 74], "sy": [6, 10], "statement": 6, "_tag_check": 6, "present": [6, 25, 30, 38], "_type_check": 6, "correct": 6, "work": [6, 24, 61, 75], "under": [6, 14, 25], "assumpt": 6, "from_run_dir": 6, "run_dir": [6, 8, 25, 48, 49, 50, 74], "directori": [6, 8, 16, 17, 20, 21, 24, 25, 27, 50, 53, 57, 61, 75, 79], "typevar": [6, 25], "t": [6, 21, 25, 38, 45, 78], "bound": [6, 25], "instanti": [6, 16, 18, 53], "stepbas": [8, 10, 11, 48, 74], "abc": [8, 13, 16], "_load": [8, 10, 48], "step_numb": 8, "conveni": 8, "method": [8, 10, 11, 16, 17, 20, 21, 25, 38, 48, 74], "runner": 8, "info": [8, 13, 14, 31, 45, 79], "need": [8, 10, 11, 25, 38, 48, 74], "int": [8, 14, 20, 27, 30, 33], "being": [8, 10, 27, 29, 49, 74], "current": [8, 75], "_post_process": [8, 10, 48, 74], "workflow_output": 8, "post": 8, "": [8, 10, 11, 18, 25, 48, 73, 74], "workflow": [8, 10, 48, 74], "captur": [8, 10, 49], "option": [8, 10, 11, 18, 27, 31, 48, 74], "stepoutput": [8, 10, 11, 48, 74], "default": [8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 25, 27, 30, 31, 45, 48, 74], "output": [8, 10, 11, 16, 24, 27, 48, 50, 74], "caller": 8, "_pre_process": [8, 10, 11], "pre": [8, 10, 48, 74], "_run_workflow": [8, 10, 11, 48, 74], "abstract": [8, 11, 13, 14, 16], "pre_process_output": [8, 10, 11, 48, 74], "halt_on_failur": [8, 11, 73], "set": [8, 10, 13, 25, 30, 31, 48, 49, 54, 58, 75, 78], "execut": [8, 10, 24, 25, 61, 74, 75], "should": [8, 16, 17, 18, 20, 21, 31, 39, 49, 50, 55, 64, 66, 69, 71, 73, 75], "can": [8, 25, 27, 74], "overridden": 8, "subclass": 8, "extens": [8, 10, 11, 18, 48, 55, 74], "final": 8, "start": 8, "finish": 8, "steperror": 8, "end": [8, 50], "statu": 8, "stepstatu": [8, 10], "namedtupl": 8, "intenum": 8, "possibl": [8, 30], "3": [8, 14, 25, 31], "get_by_bool": 8, "get": [8, 31, 75, 78], "get_by_valu": 8, "find": [8, 16, 27, 29, 31, 75, 79], "relat": [9, 10, 11, 25, 29, 30, 31, 33], "push": 9, "pull": 9, "data": [9, 11, 16, 36, 40], "somewher": 9, "arbitrari": [10, 25], "piec": 10, "code": [10, 25, 49], "cli": 10, "call": [10, 24, 31, 53, 79], "runfunctionstep": [10, 49], "must": [10, 16], "within": [10, 16, 25, 30], "_get_arg_str": 10, "up": [10, 49, 75], "funcstep": 10, "py": 10, "script": [10, 49], "accordingli": [10, 31, 33, 50], "make_script": 10, "definit": 10, "string": [10, 11, 31, 33, 50, 74], "format": [10, 16, 31, 49, 79], "subprocessstep": [10, 49], "cmd": 10, "shell": 10, "command": [10, 49, 79], "subprocess": 10, "wrap_call_in_exit": 10, "fn": [10, 24], "decor": [10, 24, 25, 61, 74], "wrap": [10, 25], "try": [10, 33, 78, 79], "A": 10, "caught": 10, "assertionerror": 10, "exit": [10, 75], "In": [10, 38], "either": [10, 25, 31], "case": [10, 38, 39, 75, 77], "traceback": 10, "written": [10, 79], "stderr": [10, 49], "verif": [11, 81], "assertionstep": [11, 50, 73], "convert": [11, 16], "anyth": 11, "index": [11, 20, 30, 78], "like": [11, 13, 25, 31], "correspond": [11, 18, 30, 31, 38], "structur": [11, 16, 30], "comparison_func": 11, "op_str": 11, "represent": 11, "e": [11, 13, 14, 45], "g": [11, 13, 14, 45], "verifycontain": [11, 50], "verifydataframecontain": [11, 50], "criteria": [11, 39], "verifydoesnotcontain": [11, 50], "verifyeq": [11, 50, 73], "verifyg": [11, 50], "verifygt": [11, 50], "strictli": 11, "verifyin": [11, 50], "verifyitemscontain": [11, 50], "verifykeyscontain": [11, 50], "verifyl": [11, 50], "verifylt": [11, 50], "verifyn": [11, 50], "inequ": 11, "verifynotin": [11, 50], "verifyvaluescontain": [11, 50], "certain": [13, 18], "metadata": 13, "project": 13, "tagbas": [13, 14, 45], "per": [13, 14, 31, 45], "basi": [13, 14, 45], "_type": [13, 14, 45], "tagtyp": [13, 14], "speed": [13, 14, 45], "descriptor": [13, 14, 45], "high": 13, "level": [13, 24, 31, 78], "analysi": 13, "misc": 13, "associ": [14, 18], "absoluteunit": 14, "runtimetag": 14, "more": [14, 27, 39, 55, 75, 79], "24": 14, "hour": 14, "expected_rang": 14, "float": [14, 20, 30, 33], "1440": 14, "minut": 14, "extralong": 14, "between": 14, "180": 14, "long": 14, "60": 14, "medium": 14, "5": 14, "30": 14, "defin": [14, 16, 17, 20, 21, 25], "rang": 14, "time": [14, 24], "short": [14, 31, 79], "dataframepars": [16, 17, 21, 53, 54, 58], "file_path": [16, 17, 20, 21, 74], "use_glob": [16, 17, 20, 21], "cach": [16, 17, 20, 21, 53], "resultspars": [16, 18, 20, 53], "parser": [16, 17, 18, 19, 20, 21, 22, 53, 55, 57], "includ": [16, 17, 20, 21], "wildcard": [16, 17, 20, 21, 29, 53, 77], "If": [16, 17, 20, 21, 27, 29, 30, 31], "treat": [16, 17, 20, 21, 53, 57], "flag": [16, 17, 20, 21, 25, 27, 31, 75], "memori": [16, 17, 20, 21], "_pars": [16, 17, 20, 21], "panda": [16, 17, 21, 32], "pd": [16, 53], "read_csv": [16, 53], "_search": [16, 20], "parsed_fil": [16, 20], "to_find": [16, 20], "subset": [16, 32, 53], "down": [16, 74], "entri": 16, "delimit": [16, 17, 21, 54, 58], "keyvaluepars": [16, 17, 21, 53, 54, 58], "dictionari": [16, 53], "privat": [16, 20], "locat": [16, 27, 30], "indic": [16, 20, 30], "workabl": 16, "csvdataframepars": [17, 18, 54], "csvkeyvaluepars": [17, 54], "comma": 17, "_ext_map": 18, "jsonpars": [18, 20, 57], "tsvdataframepars": [18, 21, 58], "control": 18, "_name_map": 18, "specif": [18, 54, 58, 74], "take": [18, 31, 38, 55], "prioriti": [18, 55], "over": [18, 27, 55], "get_pars": [18, 55], "name_map": 18, "ext_map": 18, "filenam": 18, "determin": 18, "uniontyp": [20, 30], "tsvkeyvaluepars": [21, 58], "tab": [21, 54, 58], "style": [24, 25, 31, 50], "cwd_reset": [24, 61], "keep": 24, "track": 24, "alwai": 24, "reset": [24, 61], "after": [24, 48, 49], "wrapper": 24, "make_run_dir": [24, 61], "outer_dir": 24, "tmp": 24, "subdirectori": [24, 25, 61], "thei": [24, 61], "alreadi": [24, 30, 61], "outer": [24, 61, 78], "pytest": [25, 74], "applydecor": [25, 74], "For": [25, 48, 49], "exampl": [25, 39, 43, 44, 45, 46, 74, 78, 79, 80], "staticmethod": [25, 74], "myclass": 25, "fixtur": [25, 74], "my_fixtur": 25, "def": 25, "fixture_my_fixtur": 25, "method_1": 25, "method_2": 25, "roughli": 25, "equival": 25, "allow": [25, 31], "you": [25, 31], "manual": 25, "add": [25, 27, 31, 79], "your": [25, 31], "linter": 25, "probabl": 25, "complain": 25, "e0211": 25, "e0213": 25, "won": 25, "issu": [25, 80], "t_decor": 25, "union": [25, 27, 74], "t_cl": 25, "fixture_run_dir": 25, "tmp_path": [25, 50, 53, 57, 61, 74, 79], "relev": [25, 48], "onli": [25, 29, 31, 49, 79], "instal": [25, 80], "anywai": 25, "run_step": [25, 74], "running_pytest": 25, "temp_dir": [25, 74], "temp": [25, 50, 53, 57, 74, 75, 79], "examplestep": 25, "4": 25, "three_input_sum": 25, "c": 25, "would": 25, "some_temp_dir_path": 25, "instead": [25, 74], "test_someth": 25, "my_condit": 25, "some_modul": 25, "function_cal": 25, "act": 25, "wai": 25, "scope": [25, 39, 54, 58, 75], "still": 25, "origin": 25, "signatur": 25, "directli": 25, "also": [25, 49], "tell": 25, "duplicatetest": [27, 75], "hyalusrunn": [27, 75], "to_run": 27, "runs_dir": [27, 75], "search_dir": 27, "cleanup_on_pass": 27, "orchestr": 27, "direct": 27, "prevent": 27, "multipl": [27, 29, 50, 53, 75, 77], "same": [27, 53, 57], "remov": [27, 31, 79], "_find_test": 27, "absolut": [27, 75], "testnotfound": [27, 75], "onc": [27, 31, 79], "_make_run_dir": 27, "test_path": 27, "alphanumeric_char": 27, "8": 27, "accord": 27, "copi": [27, 50, 53, 57], "alphanumer": 27, "charact": 27, "invalidwildcard": [29, 77], "repres": [29, 30], "singl": 29, "glob_fil": [29, 77], "glob": [29, 53, 77], "jsonobject": 30, "jsonvalu": 30, "arrai": [30, 78], "json_append": [30, 78], "obj": [30, 78], "path_list": [30, 78], "append": [30, 78], "updat": [30, 78], "keyerror": [30, 78], "indexerror": [30, 78], "valueerror": [30, 78], "lead": 30, "someth": [30, 78], "json_get": [30, 78], "inspect": 30, "json_set": [30, 78], "create_kei": [30, 78], "empti": [30, 50, 78], "hyalusfilehandl": 31, "log_fil": 31, "filehandl": 31, "custom": 31, "hyaluslogformatt": [31, 79], "handler": [31, 79], "formatt": 31, "pathnam": 31, "attribut": [31, 48], "module_path": 31, "initi": [31, 82], "describ": 31, "abov": 31, "special": 31, "date": 31, "datefmt": 31, "omit": 31, "iso8601": 31, "rfc": 31, "3339": 31, "want": 31, "templat": 31, "chang": [31, 80], "version": 31, "ad": [31, 79], "hyalusstreamhandl": 31, "stream": 31, "streamhandl": 31, "textio": 31, "io": 31, "write": [31, 74, 79], "add_file_handl": [31, 79], "root": 31, "logger": 31, "configure_log": [31, 79], "log_stdout": [31, 79], "debug": [31, 79], "interpret": [31, 79], "session": [31, 79], "Will": 31, "circuit": [31, 79], "stdout": [31, 49, 79], "find_handl": [31, 79], "remove_file_handl": [31, 79], "subset_datafram": 32, "df": 32, "cast": 33, "type_str": 33, "packag": [34, 35, 80], "subpackag": [34, 35, 80], "test_appli": [36, 37], "test_compar": [36, 37], "namespac": [36, 40], "test_load": [36, 40, 48, 49], "test_bas": [36, 40, 47, 52], "test_csv": [36, 52], "test_factori": [36, 52], "test_gtf": [36, 52], "test_json": [36, 52], "test_tsv": [36, 52], "test_vcf": [36, 52], "test_dir_1": [36, 60], "test_dir_2": [36, 60], "test_common": [36, 60], "test_python": [36, 60], "test_runtest": [36, 60], "test_file_util": [36, 76], "test_json_util": [36, 76], "test_logging_util": [36, 76], "unit": [38, 39, 48, 49, 50, 53, 54, 55, 57, 58, 77, 78, 79], "hyalu": [38, 39, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 74, 75, 77, 78, 79, 80], "testconstraintappli": 38, "test_apply_mixed_1": 38, "test_apply_mixed_2": 38, "test_apply_three_args_1": 38, "three": 38, "test_apply_three_args_2": 38, "test_apply_three_kwargs_1": 38, "test_apply_three_kwargs_2": 38, "test_apply_two_args_1": 38, "two": [38, 53, 57], "test_apply_two_args_2": 38, "test_apply_two_kwargs_1": 38, "test_apply_two_kwargs_2": 38, "test_process_args_mix": 38, "sure": [38, 49, 74], "mix": [38, 50], "simpl": [38, 39], "resolv": 38, "properli": [38, 49, 50, 53, 61, 79], "test_process_args_resolv": 38, "test_process_args_simpl": 38, "don": 38, "test_process_kwargs_mix": 38, "test_process_kwargs_resolv": 38, "test_process_kwargs_simpl": 38, "valuegett": 38, "dummi": [38, 74], "grab": 38, "ge_kwarg": 38, "arg1": [38, 49], "arg2": [38, 49], "arg3": 38, "ge_mix": 38, "ge_multi": 38, "builtin": 39, "left": [39, 61], "out": [39, 49, 54, 58, 71, 73, 74, 75], "fixture_example_df": 39, "fixture_example_dict": 39, "fixture_example_list": 39, "test_contains_fals": 39, "example_list": 39, "where": [39, 77], "test_contains_tru": 39, "test_dataframe_contains_fals": 39, "example_df": 39, "test_dataframe_contains_true_1": 39, "test_dataframe_contains_true_2": 39, "test_dataframe_contains_true_3": 39, "test_does_not_contain_fals": 39, "test_does_not_contain_tru": 39, "test_eq_fals": [39, 53, 57], "test_eq_tru": 39, "test_ge_fals": 39, "test_ge_tru": 39, "test_gt_fals": 39, "test_gt_tru": 39, "test_in_fals": 39, "test_in_tru": 39, "test_is_fals": 39, "test_is_not_fals": 39, "test_is_not_tru": 39, "test_is_tru": 39, "test_items_contain_fals": 39, "example_dict": 39, "test_items_contain_tru": 39, "test_keys_contain_fals": 39, "test_keys_contain_tru": 39, "test_le_fals": 39, "test_le_tru": 39, "test_lt_fals": 39, "test_lt_tru": 39, "test_ne_fals": 39, "test_ne_tru": 39, "test_not_in_fals": 39, "test_not_in_tru": 39, "test_values_contain_fals": 39, "test_values_contain_tru": 39, "invalid_syntax": [40, 41], "invalid_typ": [40, 41], "missing_tag": [40, 41], "test_run": [40, 47], "test_verifi": [40, 47], "custom_func": [43, 44, 45, 46, 64, 66, 69, 71, 73], "miss": [44, 45, 51], "test_descript": 44, "input_data": 44, "dummytag": 45, "isn": 45, "mystep": 48, "ensur": 48, "been": 48, "testrunfunctionstep": 49, "test_make_script_both_argu": 49, "test_make_script_keyword_argu": 49, "test_make_script_positional_argu": 49, "test_run_fail": [49, 50, 75], "non": 49, "zero": 49, "test_run_pass": [49, 50, 75], "successfulli": 49, "test_run_recurs": 49, "recurs": 49, "support": 49, "testsubprocessstep": 49, "success": 49, "func_to_run": 49, "kwarg1": 49, "kwarg2": 49, "recurse_flip_flop": 49, "testassertionstep": 50, "assum": 50, "implement": 50, "correctli": [50, 55, 74], "test_pre_process_multiple_pars": 50, "empty_json": 50, "tsv_file": 50, "togeth": 50, "test_pre_process_no_pars": 50, "potenti": 50, "test_pre_process_with_pars": 50, "json_fil": [50, 64, 66, 69, 71, 73], "test_run_workflow_fail": 50, "test_run_workflow_pass": 50, "testverifycontain": 50, "test_str": 50, "creation": [50, 61, 75], "intend": 50, "testverifydataframecontain": 50, "testverifydoesnotcontain": 50, "testverifyeq": 50, "testverifyg": 50, "testverifygt": 50, "testverifyin": 50, "testverifyitemscontain": 50, "testverifykeyscontain": 50, "testverifyl": 50, "testverifylt": 50, "testverifyn": 50, "testverifynotin": 50, "testverifyvaluescontain": 50, "fixture_empty_json": 50, "fixture_json_fil": 50, "fixture_tsv_fil": 50, "testconfigload": 51, "test_load_module_invalid_config": 51, "test_load_module_invalid_path": 51, "test_load_module_invalid_typ": 51, "ha": [51, 61, 75], "incorrectli": 51, "test_load_module_missing_field": 51, "test_load_module_missing_tag": 51, "test_load_module_pass": 51, "testdataframepars": 53, "test_abc_honor": 53, "content": [53, 57], "test_eq_true_file_path": [53, 57], "test_eq_true_pars": [53, 57], "tmp_tsv_df": 53, "test_pars": 53, "test_parse_kwarg": 53, "test_search": 53, "test_search_multipl": 53, "testkeyvaluepars": 53, "tmp_tsv_kv": 53, "testresultspars": 53, "test_parse_cache_off": 53, "turn": 53, "test_parse_cache_on": 53, "test_use_glob_tru": 53, "integr": 53, "fixture_tmp_tsv_df": 53, "fixture_tmp_tsv_kv": 53, "testcsvdataframepars": 54, "test_delimit": [54, 58], "testcsvkeyvaluepars": 54, "testgetpars": 55, "test_ext_map_csv": 55, "purpos": 55, "matcher": 55, "test_ext_map_gtf": 55, "test_ext_map_json": 55, "test_ext_map_match": 55, "test_ext_map_tsv": 55, "test_ext_map_vcf": 55, "test_name_map_match": 55, "test_name_map_prior": 55, "test_no_match": 55, "testjsonpars": 57, "tmp_json": 57, "fixture_tmp_json": 57, "json_1": 57, "testtsvdataframepars": 58, "testtsvkeyvaluepars": 58, "runtest_1": [60, 62], "runtest_2": [60, 62, 67], "runtest_3": [60, 67], "runtest_4": [60, 67], "testcwdreset": 61, "test_cwd_reset_function_except": 61, "test_cwd_reset_function_success": 61, "testmakerundir": 61, "test_all_cr": 61, "beforehand": 61, "test_existing_untouch": 61, "untouch": 61, "test_no_preexisting_outer_dir": 61, "few": [64, 66, 71, 73], "to_dump": [64, 66, 69, 71, 73], "verifyeqbutfail": 73, "testapplydecor": 74, "static": 74, "test_decorator_appli": 74, "testpytestapplydecoratorrunstep": 74, "test_example_1": 74, "test_example_2": 74, "testpytestrunstep": 74, "test_run_steps_method_with_run_dir_fixtur": 74, "test_run_steps_method_without_run_dir_fixtur": 74, "test_run_steps_staticmethod_with_run_dir_fixtur": 74, "test_run_steps_staticmethod_without_run_dir_fixtur": 74, "test_run_steps_with_run_dir_fixture_decorated_by_staticmethod": 74, "test_run_steps_without_run_dir_fixture_decorated_by_staticmethod": 74, "testrunstep": 74, "test_run_steps_applydecor": 74, "test_run_steps_classmethod_decor": 74, "test_run_steps_decoration_by_classmethod": 74, "come": 74, "test_run_steps_decoration_by_staticmethod": 74, "test_run_steps_method_decor": 74, "test_run_steps_no_tempdir": 74, "dir": [74, 75], "tear": 74, "test_run_steps_path_tempdir": 74, "test_run_steps_staticmethod_decor": 74, "test_run_steps_str_tempdir": 74, "todecor": 74, "some_method": 74, "some_other_method": 74, "yet_another_method": 74, "valuewrit": 74, "to_writ": 74, "overrid": 74, "test_run_steps_test_function_with_run_dir_fixtur": 74, "test_run_steps_test_function_without_run_dir_fixtur": 74, "testhyalusrunn": 75, "test_find_test_dupl": 75, "test_find_test_in_search_dirs_absolute_path": 75, "live": 75, "test_find_test_in_search_dirs_relative_path": 75, "rel": 75, "test_find_test_is_dir_absolute_path": 75, "test_find_test_is_dir_cwd": 75, "test_find_test_is_dir_relative_path": 75, "test_find_test_not_found": 75, "cwd": 75, "test_make_run_dir": 75, "basic": 75, "test_make_run_dir_collis": 75, "complet": 75, "collis": 75, "test_run_error": 75, "test_run_fail_cleanup_run": 75, "clean": 75, "cleanup": 75, "test_run_fail_halt_on_error": 75, "halt_on_error": 75, "test_run_fail_raise_except": 75, "its": [75, 79], "caus": 75, "befor": 75, "test_run_pass_cleanup_run": 75, "fixture_runs_dir": 75, "tmp_path_factori": 75, "testglobfil": 77, "test_glob_file_multiple_found": 77, "test_glob_file_not_found": 77, "test_glob_file_pass": 77, "testjsonappend": 78, "test_json_append_1": 78, "test_arrai": 78, "test_json_append_2": 78, "inner": 78, "test_json_append_invalid_index": 78, "doesn": 78, "test_json_append_invalid_kei": 78, "test_json_append_not_arrai": 78, "testjsonget": 78, "test_json_get_array_1": 78, "most": 78, "test_json_get_array_2": 78, "test_json_get_array_empty_array_fail": 78, "test_json_get_array_empty_array_pass": 78, "test_json_get_array_empty_path_list": 78, "itself": 78, "test_json_get_array_invalid_index": 78, "test_json_get_object_1": 78, "test_object": 78, "test_json_get_object_2": 78, "test_json_get_object_empty_object_fail": 78, "test_json_get_object_empty_object_pass": 78, "test_json_get_object_empty_path_list": 78, "test_json_get_object_invalid_kei": 78, "testjsonset": 78, "test_json_set_array_1": 78, "test_json_set_array_2": 78, "middl": 78, "test_json_set_array_3": 78, "test_json_set_array_empty_path_list": 78, "attempt": 78, "test_json_set_array_invalid_index": 78, "test_json_set_object_1": 78, "test_json_set_object_2": 78, "test_json_set_object_create_key_tru": 78, "test_json_set_object_empty_path_list": 78, "test_json_set_object_invalid_kei": 78, "fixture_test_arrai": 78, "fixture_test_object": 78, "testaddremovefilehandl": 79, "test_add_and_remove_file_handl": 79, "tmp_log": 79, "test_add_file_handler_already_pres": 79, "duplic": 79, "test_remove_file_handler_not_found": 79, "noth": 79, "testconfigurelog": 79, "separ": 79, "make_cmd": 79, "test_double_cal": 79, "test_stdout_false_debug_fals": 79, "test_stdout_false_debug_tru": 79, "test_stdout_true_debug_fals": 79, "test_stdout_true_debug_tru": 79, "testfindhandl": 79, "test_find_handler_match": 79, "test_find_handler_no_match": 79, "testhyaluslogformatt": 79, "test_format": 79, "hyalus_log_record": 79, "proper": 79, "fixture_hyalus_log_record": 79, "fixture_tmp_log": 79, "report": 80, "intern": 81, "tool": 81, "genapsysinc": 81, "todo": 81, "github": 82, "bare": 82, "minimum": 82, "repo": 82, "setup": 82}, "objects": {"": [[0, 0, 0, "-", "hyalus"], [36, 0, 0, "-", "tests"]], "hyalus": [[1, 0, 0, "-", "assertions"], [4, 0, 0, "-", "config"], [15, 0, 0, "-", "parse"], [23, 0, 0, "-", "run"], [28, 0, 0, "-", "utils"]], "hyalus.assertions": [[2, 0, 0, "-", "apply"], [3, 0, 0, "-", "compare"]], "hyalus.assertions.apply": [[2, 1, 1, "", "ConstraintApplier"]], "hyalus.assertions.apply.ConstraintApplier": [[2, 2, 1, "", "apply"], [2, 2, 1, "", "process_arg"], [2, 2, 1, "", "process_args"], [2, 2, 1, "", "process_kwarg"], [2, 2, 1, "", "process_kwargs"], [2, 3, 1, "", "processed_args"], [2, 3, 1, "", "processed_kwargs"], [2, 3, 1, "", "result"]], "hyalus.assertions.compare": [[3, 4, 1, "", "contains"], [3, 4, 1, "", "dataframe_contains"], [3, 4, 1, "", "does_not_contain"], [3, 4, 1, "", "eq"], [3, 4, 1, "", "ge"], [3, 4, 1, "", "gt"], [3, 4, 1, "", "in_"], [3, 4, 1, "", "is_"], [3, 4, 1, "", "is_not"], [3, 4, 1, "", "items_contain"], [3, 4, 1, "", "keys_contain"], [3, 4, 1, "", "le"], [3, 4, 1, "", "lt"], [3, 4, 1, "", "ne"], [3, 4, 1, "", "not_in"], [3, 4, 1, "", "values_contain"]], "hyalus.config": [[5, 0, 0, "-", "common"], [6, 0, 0, "-", "loader"], [7, 0, 0, "-", "steps"], [12, 0, 0, "-", "tags"]], "hyalus.config.common": [[5, 1, 1, "", "ConfigStatus"], [5, 6, 1, "", "Error"], [5, 6, 1, "", "Failure"], [5, 6, 1, "", "InvalidHyalusConfig"]], "hyalus.config.common.ConfigStatus": [[5, 5, 1, "", "COULD_NOT_BE_LOADED"], [5, 5, 1, "", "INVALID_FIELDS"], [5, 5, 1, "", "MISSING_FIELDS"], [5, 5, 1, "", "NOT_FOUND"], [5, 5, 1, "", "OTHER_FAILURE"], [5, 5, 1, "", "PYLINT_FAILURE"], [5, 5, 1, "", "VALID"]], "hyalus.config.loader": [[6, 1, 1, "", "ConfigAttr"], [6, 1, 1, "", "ConfigLoader"]], "hyalus.config.loader.ConfigAttr": [[6, 2, 1, "", "_asdict"], [6, 5, 1, "", "_field_defaults"], [6, 5, 1, "", "_fields"], [6, 2, 1, "", "_make"], [6, 2, 1, "", "_replace"], [6, 5, 1, "", "description"], [6, 5, 1, "", "name"], [6, 5, 1, "", "type"]], "hyalus.config.loader.ConfigLoader": [[6, 2, 1, "", "_field_check"], [6, 2, 1, "", "_lint"], [6, 2, 1, "", "_load_module"], [6, 2, 1, "", "_tag_check"], [6, 2, 1, "", "_type_check"], [6, 2, 1, "", "from_run_dir"], [6, 2, 1, "", "run"]], "hyalus.config.steps": [[8, 0, 0, "-", "base"], [9, 0, 0, "-", "cloud"], [10, 0, 0, "-", "run"], [11, 0, 0, "-", "verify"]], "hyalus.config.steps.base": [[8, 1, 1, "", "StepBase"], [8, 6, 1, "", "StepError"], [8, 1, 1, "", "StepOutput"], [8, 1, 1, "", "StepStatus"]], "hyalus.config.steps.base.StepBase": [[8, 2, 1, "", "_load"], [8, 2, 1, "", "_post_process"], [8, 2, 1, "", "_pre_process"], [8, 2, 1, "", "_run_workflow"], [8, 3, 1, "", "halt_on_failure"], [8, 3, 1, "", "needs"], [8, 2, 1, "", "run"]], "hyalus.config.steps.base.StepOutput": [[8, 2, 1, "", "_asdict"], [8, 5, 1, "", "_field_defaults"], [8, 5, 1, "", "_fields"], [8, 2, 1, "", "_make"], [8, 2, 1, "", "_replace"], [8, 5, 1, "", "output"], [8, 5, 1, "", "status"]], "hyalus.config.steps.base.StepStatus": [[8, 5, 1, "", "ERROR"], [8, 5, 1, "", "FAIL"], [8, 5, 1, "", "PASS"], [8, 2, 1, "", "get_by_bool"], [8, 2, 1, "", "get_by_value"]], "hyalus.config.steps.run": [[10, 1, 1, "", "RunFunctionStep"], [10, 1, 1, "", "SubprocessStep"], [10, 4, 1, "", "wrap_call_in_exit"]], "hyalus.config.steps.run.RunFunctionStep": [[10, 2, 1, "", "_get_arg_str"], [10, 2, 1, "", "_load"], [10, 2, 1, "", "_pre_process"], [10, 2, 1, "", "_run_workflow"], [10, 2, 1, "", "make_script"], [10, 3, 1, "", "needs"]], "hyalus.config.steps.run.SubprocessStep": [[10, 2, 1, "", "_run_workflow"], [10, 3, 1, "", "needs"]], "hyalus.config.steps.verify": [[11, 1, 1, "", "AssertionStep"], [11, 1, 1, "", "VerifyContains"], [11, 1, 1, "", "VerifyDataFrameContains"], [11, 1, 1, "", "VerifyDoesNotContain"], [11, 1, 1, "", "VerifyEQ"], [11, 1, 1, "", "VerifyGE"], [11, 1, 1, "", "VerifyGT"], [11, 1, 1, "", "VerifyIn"], [11, 1, 1, "", "VerifyItemsContain"], [11, 1, 1, "", "VerifyKeysContain"], [11, 1, 1, "", "VerifyLE"], [11, 1, 1, "", "VerifyLT"], [11, 1, 1, "", "VerifyNE"], [11, 1, 1, "", "VerifyNotIn"], [11, 1, 1, "", "VerifyValuesContain"]], "hyalus.config.steps.verify.AssertionStep": [[11, 2, 1, "", "_pre_process"], [11, 2, 1, "", "_run_workflow"], [11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "halt_on_failure"], [11, 3, 1, "", "needs"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyContains": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyDataFrameContains": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyDoesNotContain": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyEQ": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyGE": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyGT": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyIn": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyItemsContain": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyKeysContain": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyLE": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyLT": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyNE": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyNotIn": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.steps.verify.VerifyValuesContain": [[11, 3, 1, "", "comparison_func"], [11, 3, 1, "", "op_str"]], "hyalus.config.tags": [[13, 0, 0, "-", "base"], [14, 0, 0, "-", "runtime"]], "hyalus.config.tags.base": [[13, 1, 1, "", "TagBase"], [13, 1, 1, "", "TagType"]], "hyalus.config.tags.base.TagBase": [[13, 3, 1, "", "_types"], [13, 3, 1, "", "types"]], "hyalus.config.tags.base.TagType": [[13, 5, 1, "", "ANALYSIS"], [13, 5, 1, "", "MISC"], [13, 5, 1, "", "RUNTIME"]], "hyalus.config.tags.runtime": [[14, 1, 1, "", "AbsoluteUnit"], [14, 1, 1, "", "ExtraLong"], [14, 1, 1, "", "Long"], [14, 1, 1, "", "Medium"], [14, 1, 1, "", "RuntimeTag"], [14, 1, 1, "", "Short"]], "hyalus.config.tags.runtime.AbsoluteUnit": [[14, 3, 1, "", "expected_range"]], "hyalus.config.tags.runtime.ExtraLong": [[14, 3, 1, "", "expected_range"]], "hyalus.config.tags.runtime.Long": [[14, 3, 1, "", "expected_range"]], "hyalus.config.tags.runtime.Medium": [[14, 3, 1, "", "expected_range"]], "hyalus.config.tags.runtime.RuntimeTag": [[14, 3, 1, "", "_types"], [14, 3, 1, "", "expected_range"]], "hyalus.config.tags.runtime.Short": [[14, 3, 1, "", "expected_range"]], "hyalus.parse": [[16, 0, 0, "-", "base"], [17, 0, 0, "-", "csv"], [18, 0, 0, "-", "factory"], [19, 0, 0, "-", "gtf"], [20, 0, 0, "-", "json"], [21, 0, 0, "-", "tsv"], [22, 0, 0, "-", "vcf"]], "hyalus.parse.base": [[16, 1, 1, "", "DataFrameParser"], [16, 1, 1, "", "KeyValueParser"], [16, 1, 1, "", "ResultsParser"]], "hyalus.parse.base.DataFrameParser": [[16, 2, 1, "", "_parse"], [16, 2, 1, "", "_search"], [16, 3, 1, "", "delimiter"]], "hyalus.parse.base.KeyValueParser": [[16, 2, 1, "", "_parse"], [16, 2, 1, "", "_search"], [16, 3, 1, "", "delimiter"]], "hyalus.parse.base.ResultsParser": [[16, 2, 1, "", "_parse"], [16, 2, 1, "", "_search"], [16, 2, 1, "", "parse"], [16, 2, 1, "", "search"]], "hyalus.parse.csv": [[17, 1, 1, "", "CSVDataFrameParser"], [17, 1, 1, "", "CSVKeyValueParser"]], "hyalus.parse.csv.CSVDataFrameParser": [[17, 3, 1, "", "delimiter"]], "hyalus.parse.csv.CSVKeyValueParser": [[17, 3, 1, "", "delimiter"]], "hyalus.parse.factory": [[18, 7, 1, "", "_ext_map"], [18, 7, 1, "", "_name_map"], [18, 4, 1, "", "get_parser"]], "hyalus.parse.json": [[20, 1, 1, "", "JSONParser"]], "hyalus.parse.json.JSONParser": [[20, 2, 1, "", "_parse"], [20, 2, 1, "", "_search"]], "hyalus.parse.tsv": [[21, 1, 1, "", "TSVDataFrameParser"], [21, 1, 1, "", "TSVKeyValueParser"]], "hyalus.parse.tsv.TSVDataFrameParser": [[21, 3, 1, "", "delimiter"]], "hyalus.parse.tsv.TSVKeyValueParser": [[21, 3, 1, "", "delimiter"]], "hyalus.run": [[24, 0, 0, "-", "common"], [25, 0, 0, "-", "python"], [26, 0, 0, "-", "runsuite"], [27, 0, 0, "-", "runtest"]], "hyalus.run.common": [[24, 4, 1, "", "cwd_reset"], [24, 4, 1, "", "make_run_dir"]], "hyalus.run.python": [[25, 4, 1, "", "applydecorator"], [25, 4, 1, "", "fixture_run_dir"], [25, 4, 1, "", "run_steps"]], "hyalus.run.runtest": [[27, 6, 1, "", "DuplicateTests"], [27, 1, 1, "", "HyalusRunner"], [27, 6, 1, "", "TestNotFound"]], "hyalus.run.runtest.HyalusRunner": [[27, 2, 1, "", "_find_test"], [27, 2, 1, "", "_make_run_dir"], [27, 2, 1, "", "run"]], "hyalus.utils": [[29, 0, 0, "-", "file_utils"], [30, 0, 0, "-", "json_utils"], [31, 0, 0, "-", "logging_utils"], [32, 0, 0, "-", "pandas_utils"], [33, 0, 0, "-", "typing_utils"]], "hyalus.utils.file_utils": [[29, 6, 1, "", "InvalidWildcard"], [29, 4, 1, "", "glob_file"]], "hyalus.utils.json_utils": [[30, 7, 1, "", "JSONObject"], [30, 7, 1, "", "JSONValue"], [30, 4, 1, "", "json_append"], [30, 4, 1, "", "json_get"], [30, 4, 1, "", "json_set"]], "hyalus.utils.logging_utils": [[31, 1, 1, "", "HyalusFileHandler"], [31, 1, 1, "", "HyalusLogFormatter"], [31, 1, 1, "", "HyalusStreamHandler"], [31, 4, 1, "", "add_file_handler"], [31, 4, 1, "", "configure_logging"], [31, 4, 1, "", "find_handler"], [31, 4, 1, "", "remove_file_handler"]], "hyalus.utils.pandas_utils": [[32, 4, 1, "", "subset_dataframe"]], "hyalus.utils.typing_utils": [[33, 4, 1, "", "type_string"]], "tests": [[37, 0, 0, "-", "assertions"], [40, 0, 0, "-", "config"], [52, 0, 0, "-", "parse"], [60, 0, 0, "-", "run"], [76, 0, 0, "-", "utils"]], "tests.assertions": [[38, 0, 0, "-", "test_apply"], [39, 0, 0, "-", "test_compare"]], "tests.assertions.test_apply": [[38, 1, 1, "", "TestConstraintApplier"], [38, 1, 1, "", "ValueGetter"], [38, 4, 1, "", "ge_kwargs"], [38, 4, 1, "", "ge_mixed"], [38, 4, 1, "", "ge_multi"]], "tests.assertions.test_apply.TestConstraintApplier": [[38, 2, 1, "", "test_apply_mixed_1"], [38, 2, 1, "", "test_apply_mixed_2"], [38, 2, 1, "", "test_apply_three_args_1"], [38, 2, 1, "", "test_apply_three_args_2"], [38, 2, 1, "", "test_apply_three_kwargs_1"], [38, 2, 1, "", "test_apply_three_kwargs_2"], [38, 2, 1, "", "test_apply_two_args_1"], [38, 2, 1, "", "test_apply_two_args_2"], [38, 2, 1, "", "test_apply_two_kwargs_1"], [38, 2, 1, "", "test_apply_two_kwargs_2"], [38, 2, 1, "", "test_process_args_mixed"], [38, 2, 1, "", "test_process_args_resolve"], [38, 2, 1, "", "test_process_args_simple"], [38, 2, 1, "", "test_process_kwargs_mixed"], [38, 2, 1, "", "test_process_kwargs_resolve"], [38, 2, 1, "", "test_process_kwargs_simple"]], "tests.assertions.test_apply.ValueGetter": [[38, 2, 1, "", "resolve"]], "tests.assertions.test_compare": [[39, 4, 1, "", "fixture_example_df"], [39, 4, 1, "", "fixture_example_dict"], [39, 4, 1, "", "fixture_example_list"], [39, 4, 1, "", "test_contains_false"], [39, 4, 1, "", "test_contains_true"], [39, 4, 1, "", "test_dataframe_contains_false"], [39, 4, 1, "", "test_dataframe_contains_true_1"], [39, 4, 1, "", "test_dataframe_contains_true_2"], [39, 4, 1, "", "test_dataframe_contains_true_3"], [39, 4, 1, "", "test_does_not_contain_false"], [39, 4, 1, "", "test_does_not_contain_true"], [39, 4, 1, "", "test_eq_false"], [39, 4, 1, "", "test_eq_true"], [39, 4, 1, "", "test_ge_false"], [39, 4, 1, "", "test_ge_true"], [39, 4, 1, "", "test_gt_false"], [39, 4, 1, "", "test_gt_true"], [39, 4, 1, "", "test_in_false"], [39, 4, 1, "", "test_in_true"], [39, 4, 1, "", "test_is_false"], [39, 4, 1, "", "test_is_not_false"], [39, 4, 1, "", "test_is_not_true"], [39, 4, 1, "", "test_is_true"], [39, 4, 1, "", "test_items_contain_false"], [39, 4, 1, "", "test_items_contain_true"], [39, 4, 1, "", "test_keys_contain_false"], [39, 4, 1, "", "test_keys_contain_true"], [39, 4, 1, "", "test_le_false"], [39, 4, 1, "", "test_le_true"], [39, 4, 1, "", "test_lt_false"], [39, 4, 1, "", "test_lt_true"], [39, 4, 1, "", "test_ne_false"], [39, 4, 1, "", "test_ne_true"], [39, 4, 1, "", "test_not_in_false"], [39, 4, 1, "", "test_not_in_true"], [39, 4, 1, "", "test_values_contain_false"], [39, 4, 1, "", "test_values_contain_true"]], "tests.config": [[41, 0, 0, "-", "data"], [47, 0, 0, "-", "steps"], [51, 0, 0, "-", "test_loader"]], "tests.config.data": [[43, 0, 0, "-", "invalid_types"], [44, 0, 0, "-", "missing_fields"], [45, 0, 0, "-", "missing_tags"], [46, 0, 0, "-", "pass"]], "tests.config.data.invalid_types": [[43, 4, 1, "", "custom_func"]], "tests.config.data.missing_fields": [[44, 4, 1, "", "custom_func"]], "tests.config.data.missing_tags": [[45, 1, 1, "", "DummyTag"], [45, 4, 1, "", "custom_func"]], "tests.config.data.missing_tags.DummyTag": [[45, 3, 1, "", "_types"]], "tests.config.data.pass": [[46, 4, 1, "", "custom_func"]], "tests.config.steps": [[48, 0, 0, "-", "test_base"], [49, 0, 0, "-", "test_run"], [50, 0, 0, "-", "test_verify"]], "tests.config.steps.test_base": [[48, 1, 1, "", "MyStep"], [48, 4, 1, "", "test_load"]], "tests.config.steps.test_base.MyStep": [[48, 2, 1, "", "_run_workflow"], [48, 3, 1, "", "needs"]], "tests.config.steps.test_run": [[49, 1, 1, "", "TestRunFunctionStep"], [49, 1, 1, "", "TestSubprocessStep"], [49, 4, 1, "", "func_to_run"]], "tests.config.steps.test_run.TestRunFunctionStep": [[49, 2, 1, "", "test_load"], [49, 2, 1, "", "test_make_script_both_arguments"], [49, 2, 1, "", "test_make_script_keyword_arguments"], [49, 2, 1, "", "test_make_script_positional_arguments"], [49, 2, 1, "", "test_run_fail"], [49, 2, 1, "", "test_run_pass"], [49, 2, 1, "", "test_run_recursion"]], "tests.config.steps.test_run.TestSubprocessStep": [[49, 2, 1, "", "test_run_fail"], [49, 2, 1, "", "test_run_pass"]], "tests.config.steps.test_verify": [[50, 1, 1, "", "TestAssertionStep"], [50, 1, 1, "", "TestVerifyContains"], [50, 1, 1, "", "TestVerifyDataFrameContains"], [50, 1, 1, "", "TestVerifyDoesNotContain"], [50, 1, 1, "", "TestVerifyEQ"], [50, 1, 1, "", "TestVerifyGE"], [50, 1, 1, "", "TestVerifyGT"], [50, 1, 1, "", "TestVerifyIn"], [50, 1, 1, "", "TestVerifyItemsContain"], [50, 1, 1, "", "TestVerifyKeysContain"], [50, 1, 1, "", "TestVerifyLE"], [50, 1, 1, "", "TestVerifyLT"], [50, 1, 1, "", "TestVerifyNE"], [50, 1, 1, "", "TestVerifyNotIn"], [50, 1, 1, "", "TestVerifyValuesContain"], [50, 4, 1, "", "fixture_empty_json"], [50, 4, 1, "", "fixture_json_file"], [50, 4, 1, "", "fixture_tsv_file"]], "tests.config.steps.test_verify.TestAssertionStep": [[50, 2, 1, "", "test_pre_process_multiple_parsers"], [50, 2, 1, "", "test_pre_process_no_parsers"], [50, 2, 1, "", "test_pre_process_with_parser"], [50, 2, 1, "", "test_run_workflow_fail"], [50, 2, 1, "", "test_run_workflow_pass"]], "tests.config.steps.test_verify.TestVerifyContains": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyDataFrameContains": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyDoesNotContain": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyEQ": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyGE": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyGT": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyIn": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyItemsContain": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyKeysContain": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyLE": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyLT": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyNE": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyNotIn": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.steps.test_verify.TestVerifyValuesContain": [[50, 2, 1, "", "test_run_fail"], [50, 2, 1, "", "test_run_pass"], [50, 2, 1, "", "test_str"]], "tests.config.test_loader": [[51, 1, 1, "", "TestConfigLoader"]], "tests.config.test_loader.TestConfigLoader": [[51, 2, 1, "", "test_load_module_invalid_config"], [51, 2, 1, "", "test_load_module_invalid_path"], [51, 2, 1, "", "test_load_module_invalid_types"], [51, 2, 1, "", "test_load_module_missing_fields"], [51, 2, 1, "", "test_load_module_missing_tags"], [51, 2, 1, "", "test_load_module_pass"]], "tests.parse": [[53, 0, 0, "-", "test_base"], [54, 0, 0, "-", "test_csv"], [55, 0, 0, "-", "test_factory"], [56, 0, 0, "-", "test_gtf"], [57, 0, 0, "-", "test_json"], [58, 0, 0, "-", "test_tsv"], [59, 0, 0, "-", "test_vcf"]], "tests.parse.test_base": [[53, 1, 1, "", "TestDataFrameParser"], [53, 1, 1, "", "TestKeyValueParser"], [53, 1, 1, "", "TestResultsParser"], [53, 4, 1, "", "fixture_tmp_tsv_df"], [53, 4, 1, "", "fixture_tmp_tsv_kv"]], "tests.parse.test_base.TestDataFrameParser": [[53, 2, 1, "", "test_abc_honored"], [53, 2, 1, "", "test_eq_false"], [53, 2, 1, "", "test_eq_true_file_path"], [53, 2, 1, "", "test_eq_true_parse"], [53, 2, 1, "", "test_parse"], [53, 2, 1, "", "test_parse_kwargs"], [53, 2, 1, "", "test_search"], [53, 2, 1, "", "test_search_multiple"]], "tests.parse.test_base.TestKeyValueParser": [[53, 2, 1, "", "test_abc_honored"], [53, 2, 1, "", "test_eq_false"], [53, 2, 1, "", "test_eq_true_file_path"], [53, 2, 1, "", "test_eq_true_parse"], [53, 2, 1, "", "test_parse"], [53, 2, 1, "", "test_search"]], "tests.parse.test_base.TestResultsParser": [[53, 2, 1, "", "test_abc_honored"], [53, 2, 1, "", "test_parse_cache_off"], [53, 2, 1, "", "test_parse_cache_on"], [53, 2, 1, "", "test_use_glob_true"]], "tests.parse.test_csv": [[54, 1, 1, "", "TestCSVDataFrameParser"], [54, 1, 1, "", "TestCSVKeyValueParser"]], "tests.parse.test_csv.TestCSVDataFrameParser": [[54, 2, 1, "", "test_delimiter"]], "tests.parse.test_csv.TestCSVKeyValueParser": [[54, 2, 1, "", "test_delimiter"]], "tests.parse.test_factory": [[55, 1, 1, "", "TestGetParser"]], "tests.parse.test_factory.TestGetParser": [[55, 2, 1, "", "test_ext_map_csv"], [55, 2, 1, "", "test_ext_map_gtf"], [55, 2, 1, "", "test_ext_map_json"], [55, 2, 1, "", "test_ext_map_match"], [55, 2, 1, "", "test_ext_map_tsv"], [55, 2, 1, "", "test_ext_map_vcf"], [55, 2, 1, "", "test_name_map_match"], [55, 2, 1, "", "test_name_map_priority"], [55, 2, 1, "", "test_no_match"]], "tests.parse.test_json": [[57, 1, 1, "", "TestJSONParser"], [57, 4, 1, "", "fixture_tmp_json"]], "tests.parse.test_json.TestJSONParser": [[57, 2, 1, "", "test_eq_false"], [57, 2, 1, "", "test_eq_true_file_path"], [57, 2, 1, "", "test_eq_true_parse"]], "tests.parse.test_tsv": [[58, 1, 1, "", "TestTSVDataFrameParser"], [58, 1, 1, "", "TestTSVKeyValueParser"]], "tests.parse.test_tsv.TestTSVDataFrameParser": [[58, 2, 1, "", "test_delimiter"]], "tests.parse.test_tsv.TestTSVKeyValueParser": [[58, 2, 1, "", "test_delimiter"]], "tests.run": [[61, 0, 0, "-", "test_common"], [62, 0, 0, "-", "test_dir_1"], [67, 0, 0, "-", "test_dir_2"], [74, 0, 0, "-", "test_python"], [75, 0, 0, "-", "test_runtest"]], "tests.run.test_common": [[61, 1, 1, "", "TestCwdReset"], [61, 1, 1, "", "TestMakeRunDir"]], "tests.run.test_common.TestCwdReset": [[61, 2, 1, "", "test_cwd_reset_function_exception"], [61, 2, 1, "", "test_cwd_reset_function_successful"]], "tests.run.test_common.TestMakeRunDir": [[61, 2, 1, "", "test_all_created"], [61, 2, 1, "", "test_existing_untouched"], [61, 2, 1, "", "test_no_preexisting_outer_dir"]], "tests.run.test_dir_1": [[63, 0, 0, "-", "runtest_1"], [65, 0, 0, "-", "runtest_2"]], "tests.run.test_dir_1.runtest_1": [[64, 0, 0, "-", "config"]], "tests.run.test_dir_1.runtest_1.config": [[64, 4, 1, "", "custom_func"]], "tests.run.test_dir_1.runtest_2": [[66, 0, 0, "-", "config"]], "tests.run.test_dir_1.runtest_2.config": [[66, 4, 1, "", "custom_func"]], "tests.run.test_dir_2": [[68, 0, 0, "-", "runtest_2"], [70, 0, 0, "-", "runtest_3"], [72, 0, 0, "-", "runtest_4"]], "tests.run.test_dir_2.runtest_2": [[69, 0, 0, "-", "config"]], "tests.run.test_dir_2.runtest_2.config": [[69, 4, 1, "", "custom_func"]], "tests.run.test_dir_2.runtest_3": [[71, 0, 0, "-", "config"]], "tests.run.test_dir_2.runtest_3.config": [[71, 4, 1, "", "custom_func"]], "tests.run.test_dir_2.runtest_4": [[73, 0, 0, "-", "config"]], "tests.run.test_dir_2.runtest_4.config": [[73, 1, 1, "", "VerifyEQButFail"], [73, 4, 1, "", "custom_func"]], "tests.run.test_dir_2.runtest_4.config.VerifyEQButFail": [[73, 3, 1, "", "halt_on_failure"]], "tests.run.test_python": [[74, 1, 1, "", "TestApplyDecorator"], [74, 1, 1, "", "TestPytestApplyDecoratorRunSteps"], [74, 1, 1, "", "TestPytestRunSteps"], [74, 1, 1, "", "TestRunSteps"], [74, 1, 1, "", "ToDecorate"], [74, 1, 1, "", "ValueWriter"], [74, 4, 1, "", "test_run_steps_test_function_with_run_dir_fixture"], [74, 4, 1, "", "test_run_steps_test_function_without_run_dir_fixture"]], "tests.run.test_python.TestApplyDecorator": [[74, 2, 1, "", "test_decorator_applied"]], "tests.run.test_python.TestPytestApplyDecoratorRunSteps": [[74, 2, 1, "", "test_example_1"], [74, 2, 1, "", "test_example_2"]], "tests.run.test_python.TestPytestRunSteps": [[74, 2, 1, "", "test_run_steps_method_with_run_dir_fixture"], [74, 2, 1, "", "test_run_steps_method_without_run_dir_fixture"], [74, 2, 1, "", "test_run_steps_staticmethod_with_run_dir_fixture"], [74, 2, 1, "", "test_run_steps_staticmethod_without_run_dir_fixture"], [74, 2, 1, "", "test_run_steps_with_run_dir_fixture_decorated_by_staticmethod"], [74, 2, 1, "", "test_run_steps_without_run_dir_fixture_decorated_by_staticmethod"]], "tests.run.test_python.TestRunSteps": [[74, 2, 1, "", "test_run_steps_applydecorator"], [74, 2, 1, "", "test_run_steps_classmethod_decoration"], [74, 2, 1, "", "test_run_steps_decoration_by_classmethod"], [74, 2, 1, "", "test_run_steps_decoration_by_staticmethod"], [74, 2, 1, "", "test_run_steps_method_decoration"], [74, 2, 1, "", "test_run_steps_no_tempdir"], [74, 2, 1, "", "test_run_steps_path_tempdir"], [74, 2, 1, "", "test_run_steps_staticmethod_decoration"], [74, 2, 1, "", "test_run_steps_str_tempdir"]], "tests.run.test_python.ToDecorate": [[74, 2, 1, "", "some_method"], [74, 2, 1, "", "some_other_method"], [74, 2, 1, "", "yet_another_method"]], "tests.run.test_python.ValueWriter": [[74, 2, 1, "", "_run_workflow"], [74, 3, 1, "", "needs"]], "tests.run.test_runtest": [[75, 1, 1, "", "TestHyalusRunner"], [75, 4, 1, "", "fixture_runs_dir"]], "tests.run.test_runtest.TestHyalusRunner": [[75, 2, 1, "", "test_find_test_duplicate"], [75, 2, 1, "", "test_find_test_in_search_dirs_absolute_path"], [75, 2, 1, "", "test_find_test_in_search_dirs_relative_path"], [75, 2, 1, "", "test_find_test_is_dir_absolute_path"], [75, 2, 1, "", "test_find_test_is_dir_cwd"], [75, 2, 1, "", "test_find_test_is_dir_relative_path"], [75, 2, 1, "", "test_find_test_not_found"], [75, 2, 1, "", "test_make_run_dir"], [75, 2, 1, "", "test_make_run_dir_collision"], [75, 2, 1, "", "test_run_error"], [75, 2, 1, "", "test_run_fail"], [75, 2, 1, "", "test_run_fail_cleanup_run"], [75, 2, 1, "", "test_run_fail_halt_on_error"], [75, 2, 1, "", "test_run_fail_raise_exception"], [75, 2, 1, "", "test_run_pass"], [75, 2, 1, "", "test_run_pass_cleanup_run"]], "tests.utils": [[77, 0, 0, "-", "test_file_utils"], [78, 0, 0, "-", "test_json_utils"], [79, 0, 0, "-", "test_logging_utils"]], "tests.utils.test_file_utils": [[77, 1, 1, "", "TestGlobFile"]], "tests.utils.test_file_utils.TestGlobFile": [[77, 2, 1, "", "test_glob_file_multiple_found"], [77, 2, 1, "", "test_glob_file_not_found"], [77, 2, 1, "", "test_glob_file_pass"]], "tests.utils.test_json_utils": [[78, 1, 1, "", "TestJsonAppend"], [78, 1, 1, "", "TestJsonGet"], [78, 1, 1, "", "TestJsonSet"], [78, 4, 1, "", "fixture_test_array"], [78, 4, 1, "", "fixture_test_object"]], "tests.utils.test_json_utils.TestJsonAppend": [[78, 2, 1, "", "test_json_append_1"], [78, 2, 1, "", "test_json_append_2"], [78, 2, 1, "", "test_json_append_invalid_index"], [78, 2, 1, "", "test_json_append_invalid_key"], [78, 2, 1, "", "test_json_append_not_array"]], "tests.utils.test_json_utils.TestJsonGet": [[78, 2, 1, "", "test_json_get_array_1"], [78, 2, 1, "", "test_json_get_array_2"], [78, 2, 1, "", "test_json_get_array_empty_array_fail"], [78, 2, 1, "", "test_json_get_array_empty_array_pass"], [78, 2, 1, "", "test_json_get_array_empty_path_list"], [78, 2, 1, "", "test_json_get_array_invalid_index"], [78, 2, 1, "", "test_json_get_object_1"], [78, 2, 1, "", "test_json_get_object_2"], [78, 2, 1, "", "test_json_get_object_empty_object_fail"], [78, 2, 1, "", "test_json_get_object_empty_object_pass"], [78, 2, 1, "", "test_json_get_object_empty_path_list"], [78, 2, 1, "", "test_json_get_object_invalid_key"]], "tests.utils.test_json_utils.TestJsonSet": [[78, 2, 1, "", "test_json_set_array_1"], [78, 2, 1, "", "test_json_set_array_2"], [78, 2, 1, "", "test_json_set_array_3"], [78, 2, 1, "", "test_json_set_array_empty_path_list"], [78, 2, 1, "", "test_json_set_array_invalid_index"], [78, 2, 1, "", "test_json_set_object_1"], [78, 2, 1, "", "test_json_set_object_2"], [78, 2, 1, "", "test_json_set_object_create_key_true"], [78, 2, 1, "", "test_json_set_object_empty_path_list"], [78, 2, 1, "", "test_json_set_object_invalid_key"]], "tests.utils.test_logging_utils": [[79, 1, 1, "", "TestAddRemoveFileHandler"], [79, 1, 1, "", "TestConfigureLogging"], [79, 1, 1, "", "TestFindHandler"], [79, 1, 1, "", "TestHyalusLogFormatter"], [79, 4, 1, "", "fixture_hyalus_log_record"], [79, 4, 1, "", "fixture_tmp_log"]], "tests.utils.test_logging_utils.TestAddRemoveFileHandler": [[79, 2, 1, "", "test_add_and_remove_file_handler"], [79, 2, 1, "", "test_add_file_handler_already_present"], [79, 2, 1, "", "test_remove_file_handler_not_found"]], "tests.utils.test_logging_utils.TestConfigureLogging": [[79, 2, 1, "", "make_cmd"], [79, 2, 1, "", "test_double_call"], [79, 2, 1, "", "test_stdout_false_debug_false"], [79, 2, 1, "", "test_stdout_false_debug_true"], [79, 2, 1, "", "test_stdout_true_debug_false"], [79, 2, 1, "", "test_stdout_true_debug_true"]], "tests.utils.test_logging_utils.TestFindHandler": [[79, 2, 1, "", "test_find_handler_match"], [79, 2, 1, "", "test_find_handler_no_match"]], "tests.utils.test_logging_utils.TestHyalusLogFormatter": [[79, 2, 1, "", "test_format"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"hyalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 81], "packag": [0, 1, 4, 7, 12, 15, 23, 28, 36, 37, 40, 47, 52, 60, 62, 63, 65, 67, 68, 70, 72, 76], "subpackag": [0, 4, 36, 40, 60, 62, 67], "assert": [1, 2, 3, 37, 38, 39], "submodul": [1, 4, 7, 12, 15, 23, 28, 37, 40, 41, 47, 52, 60, 63, 65, 68, 70, 72, 76], "appli": 2, "modul": [2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 69, 71, 73, 74, 75, 77, 78, 79], "compar": 3, "config": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 66, 69, 71, 73], "common": [5, 24], "loader": 6, "step": [7, 8, 9, 10, 11, 47, 48, 49, 50], "base": [8, 13, 16], "cloud": 9, "run": [10, 23, 24, 25, 26, 27, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "verifi": 11, "tag": [12, 13, 14], "runtim": 14, "pars": [15, 16, 17, 18, 19, 20, 21, 22, 52, 53, 54, 55, 56, 57, 58, 59], "csv": 17, "factori": 18, "gtf": 19, "json": 20, "tsv": 21, "vcf": 22, "python": 25, "runsuit": 26, "runtest": 27, "util": [28, 29, 30, 31, 32, 33, 76, 77, 78, 79], "file_util": 29, "json_util": 30, "logging_util": 31, "pandas_util": 32, "typing_util": 33, "test": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "test_appli": 38, "test_compar": 39, "data": [41, 42, 43, 44, 45, 46], "namespac": 41, "invalid_syntax": 42, "invalid_typ": 43, "missing_field": 44, "missing_tag": 45, "pass": 46, "test_bas": [48, 53], "test_run": 49, "test_verifi": 50, "test_load": 51, "test_csv": 54, "test_factori": 55, "test_gtf": 56, "test_json": 57, "test_tsv": 58, "test_vcf": 59, "test_common": 61, "test_dir_1": [62, 63, 64, 65, 66], "runtest_1": [63, 64], "runtest_2": [65, 66, 68, 69], "test_dir_2": [67, 68, 69, 70, 71, 72, 73], "runtest_3": [70, 71], "runtest_4": [72, 73], "test_python": 74, "test_runtest": 75, "test_file_util": 77, "test_json_util": 78, "test_logging_util": 79, "readm": [80, 81], "api": 80, "doc": 80, "releas": [80, 82], "instal": 81, "make": 81, "chang": 81, "report": 81, "issu": 81, "exampl": 81, "us": 81, "0": 82, "1": 82}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})